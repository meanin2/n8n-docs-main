{
  "actionnetwork": {
    "serviceName": "Action Network",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "string",
            "required": true,
            "description": "Your Action Network API Key"
          }
        ]
      }
    }
  },
  "activecampaign": {
    "serviceName": "ActiveCampaign",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API URL",
            "type": "string",
            "required": true,
            "description": "Your ActiveCampaign API URL"
          },
          {
            "name": "API Key",
            "type": "string",
            "required": true,
            "description": "Your ActiveCampaign API Key"
          }
        ]
      }
    }
  },
  "acuityscheduling": {
    "serviceName": "Acuity Scheduling",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "User ID",
            "type": "number",
            "required": true,
            "description": "Your Acuity Scheduling User ID"
          },
          {
            "name": "API Key",
            "type": "string",
            "required": true,
            "description": "Your Acuity Scheduling API Key"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Acuity Scheduling Client ID"
          },
          {
            "name": "Client Secret",
            "type": "string",
            "required": true,
            "description": "Your Acuity Scheduling Client Secret"
          }
        ]
      }
    }
  },
  "adalo": {
    "serviceName": "Adalo",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "string",
            "required": true,
            "description": "Your Adalo API Key"
          },
          {
            "name": "App ID",
            "type": "string",
            "required": true,
            "description": "Your Adalo App ID"
          }
        ]
      }
    }
  },
  "affinity": {
    "serviceName": "Affinity",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "string",
            "required": true,
            "description": "Your Affinity API Key"
          }
        ]
      }
    }
  },
  "agilecrm": {
    "serviceName": "Agile CRM",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Email Address",
            "type": "email",
            "required": true,
            "description": "Your Agile CRM registered Email Address"
          },
          {
            "name": "API Key",
            "type": "string",
            "required": true,
            "description": "Your Agile CRM REST API Key"
          },
          {
            "name": "Subdomain",
            "type": "string",
            "required": true,
            "description": "Your Agile CRM Subdomain"
          }
        ]
      }
    }
  },
  "airtable": {
    "serviceName": "Airtable",
    "authenticationMethods": {
      "personalAccessToken": {
        "type": "Personal Access Token",
        "parameters": [
          {
            "name": "Access Token",
            "type": "string",
            "required": true,
            "description": "Your Airtable Personal Access Token"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Airtable OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "string",
            "required": true,
            "description": "Your Airtable OAuth Client Secret"
          }
        ]
      }
    }
  },
  "alienvault": {
    "serviceName": "AlienVault",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "OTX Key",
            "type": "string",
            "required": true,
            "description": "Your AlienVault OTX Key"
          }
        ]
      }
    }
  },
  "amqp": {
    "serviceName": "AMQP",
    "authenticationMethods": {
      "amqpConnection": {
        "type": "AMQP Connection",
        "parameters": [
          {
            "name": "Hostname",
            "type": "string",
            "required": true,
            "description": "Hostname of your AMQP message broker"
          },
          {
            "name": "Port",
            "type": "number",
            "required": true,
            "description": "Port number for the connection"
          },
          {
            "name": "User",
            "type": "string",
            "required": true,
            "description": "Username for AMQP connection"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Password for AMQP connection"
          },
          {
            "name": "Transport Type",
            "type": "options",
            "options": ["tcp", "tls"],
            "required": false,
            "description": "Transport type for AMQP connection"
          }
        ]
      }
    }
  },
  "anthropic": {
    "serviceName": "Anthropic",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "string",
            "required": true,
            "description": "Your Anthropic API Key"
          }
        ]
      }
    }
  },
  "apitemplateio": {
    "serviceName": "APITemplate.io",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "string",
            "required": true,
            "description": "Your APITemplate.io API Key"
          }
        ]
      }
    }
  },
  "asana": {
    "serviceName": "Asana",
    "authenticationMethods": {
      "accessToken": {
        "type": "Access token",
        "parameters": [
          {
            "name": "Access Token",
            "type": "string",
            "required": true,
            "description": "Your Asana Personal Access Token"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Asana OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "string",
            "required": true,
            "description": "Your Asana OAuth Client Secret"
          }
        ]
      }
    }
  },
  "auth0management": {
    "serviceName": "Auth0 Management",
    "authenticationMethods": {
      "apiClientSecret": {
        "type": "API client secret",
        "parameters": [
          {
            "name": "Domain",
            "type": "string",
            "required": true,
            "description": "Your Auth0 Domain"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Auth0 Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Auth0 Client Secret"
          }
        ]
      }
    }
  },
  "automizy": {
    "serviceName": "Automizy",
    "authenticationMethods": {
      "apiToken": {
        "type": "API token",
        "parameters": [
          {
            "name": "API Token",
            "type": "string",
            "required": true,
            "description": "Your Automizy API Token"
          }
        ]
      }
    }
  },
  "autopilot": {
    "serviceName": "Autopilot",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "string",
            "required": true,
            "description": "Your Autopilot API Key"
          }
        ]
      }
    }
  },
  "aws": {
    "serviceName": "AWS",
    "authenticationMethods": {
      "apiAccessKey": {
        "type": "API access key",
        "parameters": [
          {
            "name": "Region",
            "type": "options",
            "options": [
              "af-south-1",
              "ap-east-1",
              "ap-northeast-1",
              "ap-northeast-2",
              "ap-northeast-3",
              "ap-south-1",
              "ap-south-2",
              "ap-southeast-1",
              "ap-southeast-2",
              "ap-southeast-3",
              "ca-central-1",
              "eu-central-1",
              "eu-north-1",
              "eu-south-1",
              "eu-south-2",
              "eu-west-1",
              "eu-west-2",
              "eu-west-3",
              "il-central-1",
              "me-central-1",
              "me-south-1",
              "sa-east-1",
              "us-east-1",
              "us-east-2",
              "us-gov-east-1",
              "us-gov-west-1",
              "us-west-1",
              "us-west-2"
            ],
            "required": true,
            "description": "Your AWS Region"
          },
          {
            "name": "Access Key ID",
            "type": "string",
            "required": true,
            "description": "Your AWS Access Key ID"
          },
          {
            "name": "Secret Access Key",
            "type": "password",
            "required": true,
            "description": "Your AWS Secret Access Key"
          },
          {
            "name": "Temporary security credential",
            "type": "boolean",
            "required": false,
            "description": "Whether to use temporary security credential"
          },
          {
            "name": "Session token",
            "type": "string",
            "required": false,
            "description": "Your AWS Session token (if using temporary security credential)",
            "displayOptions": {
              "show": {
                "temporarySecurityCredential": [
                  true
                ]
              }
            }
          },
          {
            "name": "Custom Endpoints",
            "type": "json",
            "required": false,
            "description": "Custom endpoints for VPC connection",
            "displayOptions": {
              "show": {
                "temporarySecurityCredential": [
                  false
                ]
              }
            }
          }
        ]
      }
    }
  },
  "azureopenai": {
    "serviceName": "Azure OpenAI",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Resource Name",
            "type": "string",
            "required": true,
            "description": "Your Azure OpenAI Resource Name"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Azure OpenAI API Key"
          },
          {
            "name": "API Version",
            "type": "string",
            "required": true,
            "description": "Your Azure OpenAI API Version"
          }
        ]
      }
    }
  },
  "azurestorage": {
    "serviceName": "Azure Storage",
    "authenticationMethods": {
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Azure Storage OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Azure Storage OAuth Client Secret"
          }
        ]
      },
      "sharedKey": {
        "type": "Shared Key",
        "parameters": [
          {
            "name": "Account",
            "type": "string",
            "required": true,
            "description": "Your Azure Storage Account Name"
          },
          {
            "name": "Key",
            "type": "password",
            "required": true,
            "description": "Your Azure Storage Shared Key"
          }
        ]
      }
    }
  },
  "bamboohr": {
    "serviceName": "BambooHR",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Subdomain",
            "type": "string",
            "required": true,
            "description": "Your BambooHR Subdomain"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your BambooHR API Key"
          }
        ]
      }
    }
  },
  "bannerbear": {
    "serviceName": "Bannerbear",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Project API Key",
            "type": "string",
            "required": true,
            "description": "Your Bannerbear Project API Key"
          }
        ]
      }
    }
  },
  "baserow": {
    "serviceName": "Baserow",
    "authenticationMethods": {
      "basicAuth": {
        "type": "Basic auth",
        "parameters": [
          {
            "name": "Host",
            "type": "string",
            "required": true,
            "description": "Your Baserow Host URL"
          },
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Your Baserow Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your Baserow Password"
          }
        ]
      }
    }
  },
  "beeminder": {
    "serviceName": "Beeminder",
    "authenticationMethods": {
      "apiUserToken": {
        "type": "API user token",
        "parameters": [
          {
            "name": "User",
            "type": "string",
            "required": true,
            "description": "Your Beeminder Username"
          },
          {
            "name": "Auth Token",
            "type": "password",
            "required": true,
            "description": "Your Beeminder Auth Token"
          }
        ]
      }
    }
  },
  "bitbucket": {
    "serviceName": "Bitbucket",
    "authenticationMethods": {
      "apiUsernameAppPassword": {
        "type": "API username/app password",
        "parameters": [
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Your Bitbucket Username"
          },
          {
            "name": "App Password",
            "type": "password",
            "required": true,
            "description": "Your Bitbucket App Password"
          }
        ]
      }
    }
  },
  "bitly": {
    "serviceName": "Bitly",
    "authenticationMethods": {
      "apiToken": {
        "type": "API token",
        "parameters": [
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Bitly Access Token"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Bitly OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Bitly OAuth Client Secret"
          }
        ]
      }
    }
  },
  "bitwarden": {
    "serviceName": "Bitwarden",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Environment",
            "type": "options",
            "options": ["Cloud-hosted", "Self-hosted"],
            "required": true,
            "description": "Environment type of your Bitwarden instance"
          },
          {
            "name": "Self-hosted domain",
            "type": "string",
            "required": false,
            "description": "Your self-hosted Bitwarden domain",
            "displayOptions": {
              "show": {
                "environment": [
                  "Self-hosted"
                ]
              }
            }
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Bitwarden Organization API Key Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Bitwarden Organization API Key Client Secret"
          }
        ]
      }
    }
  },
  "box": {
    "serviceName": "Box",
    "authenticationMethods": {
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Box OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Box OAuth Client Secret"
          }
        ]
      }
    }
  },
  "brandfetch": {
    "serviceName": "Brandfetch",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Brandfetch API Key"
          }
        ]
      }
    }
  },
  "brevo": {
    "serviceName": "Brevo",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Brevo API Key"
          }
        ]
      }
    }
  },
  "bubble": {
    "serviceName": "Bubble",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "App Name",
            "type": "string",
            "required": true,
            "description": "Your Bubble App Name"
          },
          {
            "name": "API Token",
            "type": "password",
            "required": true,
            "description": "Your Bubble API Token"
          },
          {
            "name": "Environment",
            "type": "options",
            "options": ["Development", "Live"],
            "required": true,
            "description": "Environment of your Bubble App"
          },
          {
            "name": "Hosting",
            "type": "options",
            "options": ["Bubble Hosting", "Self Hosted"],
            "required": true,
            "description": "Hosting type of your Bubble App"
          },
          {
            "name": "Domain",
            "type": "string",
            "required": false,
            "description": "Your custom domain for Bubble app",
            "displayOptions": {
              "show": {
                "hosting": [
                  "Self Hosted"
                ]
              }
            }
          }
        ]
      }
    }
  },
  "cal": {
    "serviceName": "Cal.com",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Host",
            "type": "string",
            "required": true,
            "default": "https://api.cal.com",
            "description": "Host URL for your Cal.com instance"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Cal.com API Key"
          }
        ]
      }
    }
  },
  "calendly": {
    "serviceName": "Calendly",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Calendly Personal Access Token"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Calendly OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Calendly OAuth Client Secret"
          }
        ]
      }
    }
  },
  "carbonblack": {
    "serviceName": "Carbon Black",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "URL of your Carbon Black Cloud console"
          },
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Carbon Black API Access Token"
          }
        ]
      }
    }
  },
  "chargebee": {
    "serviceName": "Chargebee",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Account Name",
            "type": "string",
            "required": true,
            "description": "Your Chargebee Account Name"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Chargebee API Key"
          }
        ]
      }
    }
  },
  "circleci": {
    "serviceName": "CircleCI",
    "authenticationMethods": {
      "personalApiToken": {
        "type": "Personal API token",
        "parameters": [
          {
            "name": "Personal API Token",
            "type": "password",
            "required": true,
            "description": "Your CircleCI Personal API Token"
          }
        ]
      }
    }
  },
  "ciscomeraki": {
    "serviceName": "Cisco Meraki",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Cisco Meraki API Key"
          }
        ]
      }
    }
  },
  "ciscosecureendpoint": {
    "serviceName": "Cisco Secure Endpoint",
    "authenticationMethods": {
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Region",
            "type": "options",
            "options": [
              "Asia Pacific, Japan, and China",
              "Europe",
              "North America"
            ],
            "required": true,
            "description": "Your Cisco Secure Endpoint Region"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Cisco Secure Endpoint Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Cisco Secure Endpoint Client Secret"
          }
        ]
      }
    }
  },
  "ciscoumbrella": {
    "serviceName": "Cisco Umbrella",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "string",
            "required": true,
            "description": "Your Cisco Umbrella API Key"
          },
          {
            "name": "Secret",
            "type": "password",
            "required": true,
            "description": "Your Cisco Umbrella API Secret"
          }
        ]
      }
    }
  },
  "ciscowebex": {
    "serviceName": "Webex by Cisco",
    "authenticationMethods": {
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Webex by Cisco OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Webex by Cisco OAuth Client Secret"
          }
        ]
      }
    }
  },
  "clearbit": {
    "serviceName": "Clearbit",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Clearbit API Key"
          }
        ]
      }
    }
  },
  "clickup": {
    "serviceName": "ClickUp",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your ClickUp Personal API Access Token"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your ClickUp OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your ClickUp OAuth Client Secret"
          }
        ]
      }
    }
  },
  "clockify": {
    "serviceName": "Clockify",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Clockify API Key"
          }
        ]
      }
    }
  },
  "cloudflare": {
    "serviceName": "Cloudflare",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Cloudflare API Key"
          }
        ]
      }
    }
  },
  "cockpit": {
    "serviceName": "Cockpit",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "Cockpit URL",
            "type": "string",
            "required": true,
            "description": "URL of your Cockpit instance"
          },
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Cockpit API Access Token"
          }
        ]
      }
    }
  },
  "coda": {
    "serviceName": "Coda",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Coda API Access Token"
          }
        ]
      }
    }
  },
  "cohere": {
    "serviceName": "Cohere",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Cohere API Key"
          }
        ]
      }
    }
  },
  "contentful": {
    "serviceName": "Contentful",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "Space ID",
            "type": "string",
            "required": true,
            "description": "Your Contentful Space ID"
          },
          {
            "name": "Content Delivery API Access Token",
            "type": "password",
            "required": false,
            "description": "Your Contentful Content Delivery API Access Token"
          },
          {
            "name": "Content Preview API Access Token",
            "type": "password",
            "required": false,
            "description": "Your Contentful Content Preview API Access Token"
          }
        ]
      }
    }
  },
  "convertapi": {
    "serviceName": "ConvertAPI",
    "authenticationMethods": {
      "apiToken": {
        "type": "API Token",
        "parameters": [
          {
            "name": "API Token",
            "type": "password",
            "required": true,
            "description": "Your ConvertAPI API Token"
          }
        ]
      }
    }
  },
  "convertkit": {
    "serviceName": "ConvertKit",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Secret",
            "type": "password",
            "required": true,
            "description": "Your ConvertKit API Secret"
          }
        ]
      }
    }
  },
  "copper": {
    "serviceName": "Copper",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Email",
            "type": "email",
            "required": true,
            "description": "Email address of the API key creator"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Copper API Key"
          }
        ]
      }
    }
  },
  "cortex": {
    "serviceName": "Cortex",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Cortex Instance",
            "type": "string",
            "required": true,
            "default": "http://<your_server_address>:9001/",
            "description": "URL/Server Address for your Cortex Instance"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Cortex API Key"
          }
        ]
      }
    }
  },
  "cratedb": {
    "serviceName": "CrateDB",
    "authenticationMethods": {
      "accountConnection": {
        "type": "Account connection",
        "parameters": [
          {
            "name": "Host",
            "type": "string",
            "required": true,
            "description": "Your CrateDB Hostname"
          },
          {
            "name": "Port",
            "type": "number",
            "required": true,
            "description": "Your CrateDB Port number"
          },
          {
            "name": "Database",
            "type": "string",
            "required": true,
            "description": "Your CrateDB Database name"
          },
          {
            "name": "User",
            "type": "string",
            "required": true,
            "description": "Your CrateDB Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your CrateDB Password"
          },
          {
            "name": "SSL",
            "type": "options",
            "options": ["Allow", "Disable", "Require"],
            "required": true,
            "description": "SSL setting for CrateDB connection"
          }
        ]
      }
    }
  },
  "crowddev": {
    "serviceName": "crowd.dev",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "default": "https://app.crowd.dev",
            "description": "URL of your crowd.dev instance"
          },
          {
            "name": "Tenant ID",
            "type": "string",
            "required": true,
            "description": "Your crowd.dev Tenant ID"
          },
          {
            "name": "Token",
            "type": "password",
            "required": true,
            "description": "Your crowd.dev API Token"
          }
        ]
      }
    }
  },
  "crowdstrike": {
    "serviceName": "CrowdStrike",
    "authenticationMethods": {
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "URL of your CrowdStrike instance"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your CrowdStrike Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your CrowdStrike Client Secret"
          }
        ]
      }
    }
  },
  "customerio": {
    "serviceName": "Customer.io",
    "authenticationMethods": {
      "apiKey": {
        "type": "API Key",
        "parameters": [
          {
            "name": "Region",
            "type": "options",
            "options": ["Global region", "EU region"],
            "required": true,
            "description": "Your Customer.io Region"
          },
          {
            "name": "Tracking API Key",
            "type": "password",
            "required": true,
            "description": "Your Customer.io Tracking API Key"
          },
          {
            "name": "Tracking Site ID",
            "type": "number",
            "required": true,
            "description": "Your Customer.io Tracking Site ID"
          },
          {
            "name": "App API Key",
            "type": "password",
            "required": true,
            "description": "Your Customer.io App API Key"
          }
        ]
      }
    }
  },
  "datadog": {
    "serviceName": "Datadog",
    "authenticationMethods": {
      "apiKey": {
        "type": "API Key",
        "parameters": [
          {
            "name": "Host",
            "type": "string",
            "required": true,
            "description": "Your Datadog instance Host"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Datadog API Key"
          },
          {
            "name": "App Key",
            "type": "password",
            "required": true,
            "description": "Your Datadog App Key"
          }
        ]
      }
    }
  },
  "deepl": {
    "serviceName": "DeepL",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Plan",
            "type": "options",
            "options": ["Pro Plan", "Free Plan"],
            "required": true,
            "description": "Your DeepL API Plan type"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your DeepL API Key"
          }
        ]
      }
    }
  },
  "deepseek": {
    "serviceName": "DeepSeek",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your DeepSeek API Key"
          }
        ]
      }
    }
  },
  "demio": {
    "serviceName": "Demio",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Demio API Key"
          },
          {
            "name": "API Secret",
            "type": "password",
            "required": true,
            "description": "Your Demio API Secret"
          }
        ]
      }
    }
  },
  "dfiriris": {
    "serviceName": "DFIR-IRIS",
    "authenticationMethods": {
      "apiKey": {
        "type": "API Key",
        "parameters": [
          {
            "name": "Base URL",
            "type": "string",
            "required": true,
            "description": "Base URL of your DFIR-IRIS instance"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your DFIR-IRIS API Key"
          }
        ]
      }
    }
  },
  "dhl": {
    "serviceName": "DHL",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your DHL API Key"
          }
        ]
      }
    }
  },
  "discord": {
    "serviceName": "Discord",
    "authenticationMethods": {
      "bot": {
        "type": "Bot",
        "parameters": [
          {
            "name": "Bot Token",
            "type": "password",
            "required": true,
            "description": "Your Discord Bot Token"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Discord OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Discord OAuth Client Secret"
          },
          {
            "name": "Authentication",
            "type": "options",
            "options": ["Header", "Body"],
            "required": true,
            "description": "Where to send authentication"
          },
          {
            "name": "Bot Token",
            "type": "password",
            "required": true,
            "description": "Your Discord Bot Token"
          }
        ]
      },
      "webhook": {
        "type": "Webhook",
        "parameters": [
          {
            "name": "Webhook URL",
            "type": "string",
            "required": true,
            "description": "Your Discord Webhook URL"
          }
        ]
      }
    }
  },
  "discourse": {
    "serviceName": "Discourse",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "URL of your Discourse instance"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Discourse API Key"
          },
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Your Discourse Username"
          }
        ]
      }
    }
  },
  "disqus": {
    "serviceName": "Disqus",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Disqus API Access Token (API Key)"
          }
        ]
      }
    }
  },
  "drift": {
    "serviceName": "Drift",
    "authenticationMethods": {
      "apiPersonalAccessToken": {
        "type": "API personal access token",
        "parameters": [
          {
            "name": "Personal Access Token",
            "type": "password",
            "required": true,
            "description": "Your Drift Personal Access Token"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Drift OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Drift OAuth Client Secret"
          }
        ]
      }
    }
  },
  "dropbox": {
    "serviceName": "Dropbox",
    "authenticationMethods": {
      "accessToken": {
        "type": "Access token",
        "parameters": [
          {
            "name": "App Access Type",
            "type": "options",
            "options": ["App Folder", "Full Dropbox"],
            "required": true,
            "description": "Type of access for your Dropbox App"
          },
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Dropbox API Access Token"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "App Access Type",
            "type": "options",
            "options": ["App Folder", "Full Dropbox"],
            "required": true,
            "description": "Type of access for your Dropbox App"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Dropbox OAuth Client ID (App key)"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Dropbox OAuth Client Secret (Secret)"
          }
        ]
      }
    }
  },
  "dropcontact": {
    "serviceName": "Dropcontact",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Dropcontact API Key"
          }
        ]
      }
    }
  },
  "dynatrace": {
    "serviceName": "Dynatrace",
    "authenticationMethods": {
      "accessToken": {
        "type": "Access Token",
        "parameters": [
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Dynatrace Access Token"
          }
        ]
      }
    }
  },
  "egoi": {
    "serviceName": "E-goi",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your E-goi API Key"
          }
        ]
      }
    }
  },
  "elasticsearch": {
    "serviceName": "Elasticsearch",
    "authenticationMethods": {
      "basicAuth": {
        "type": "Basic auth",
        "parameters": [
          {
            "name": "Base URL",
            "type": "string",
            "required": true,
            "description": "Base URL of your Elasticsearch application"
          },
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Your Elasticsearch Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your Elasticsearch Password"
          },
          {
            "name": "Ignore SSL Issues",
            "type": "boolean",
            "required": false,
            "description": "Whether to ignore SSL certificate validation issues"
          }
        ]
      }
    }
  },
  "elasticsecurity": {
    "serviceName": "Elastic Security",
    "authenticationMethods": {
      "basicAuth": {
        "type": "Basic auth",
        "parameters": [
          {
            "name": "Base URL",
            "type": "string",
            "required": true,
            "description": "Base URL of your Elasticsearch application"
          },
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Your Elasticsearch Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your Elasticsearch Password"
          }
        ]
      },
      "apiKey": {
        "type": "API Key",
        "parameters": [
          {
            "name": "Base URL",
            "type": "string",
            "required": true,
            "description": "Base URL of your Elasticsearch application"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Elasticsearch API Key"
          }
        ]
      }
    }
  },
  "emelia": {
    "serviceName": "Emelia",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Emelia API Key"
          }
        ]
      }
    }
  },
  "erpnext": {
    "serviceName": "ERPNext",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Environment",
            "type": "options",
            "options": ["Cloud-hosted", "Self-hosted"],
            "required": true,
            "description": "Environment type of your ERPNext instance"
          },
          {
            "name": "Subdomain",
            "type": "string",
            "required": false,
            "description": "Your ERPNext Subdomain (for Cloud-hosted)",
            "displayOptions": {
              "show": {
                "environment": [
                  "Cloud-hosted"
                ]
              }
            }
          },
          {
            "name": "Domain",
            "type": "options",
            "options": ["erpnext.com", "frappe.cloud"],
            "required": false,
            "description": "Your ERPNext Domain (for Cloud-hosted)",
            "displayOptions": {
              "show": {
                "environment": [
                  "Cloud-hosted"
                ]
              }
            }
          },
          {
            "name": "Domain",
            "type": "string",
            "required": false,
            "description": "Your ERPNext Domain (for Self-hosted)",
            "displayOptions": {
              "show": {
                "environment": [
                  "Self-hosted"
                ]
              }
            }
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your ERPNext API Key"
          },
          {
            "name": "API Secret",
            "type": "password",
            "required": true,
            "description": "Your ERPNext API Secret"
          },
          {
            "name": "Ignore SSL Issues",
            "type": "boolean",
            "required": false,
            "description": "Whether to ignore SSL certificate validation issues"
          }
        ]
      }
    }
  },
  "eventbrite": {
    "serviceName": "Eventbrite",
    "authenticationMethods": {
      "apiPrivateKey": {
        "type": "API private key",
        "parameters": [
          {
            "name": "Private Key",
            "type": "password",
            "required": true,
            "description": "Your Eventbrite Private Key"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Eventbrite OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Eventbrite OAuth Client Secret"
          }
        ]
      }
    }
  },
  "f5bigip": {
    "serviceName": "F5 Big-IP",
    "authenticationMethods": {
      "accountLogin": {
        "type": "Account login",
        "parameters": [
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Your F5 Big-IP Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your F5 Big-IP Password"
          }
        ]
      }
    }
  },
  "facebookapp": {
    "serviceName": "Facebook App",
    "authenticationMethods": {
      "appAccessToken": {
        "type": "App access token",
        "parameters": [
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Facebook App Access Token"
          },
          {
            "name": "App Secret",
            "type": "password",
            "required": false,
            "description": "Your Facebook App Secret (Optional)"
          }
        ]
      }
    }
  },
  "facebookgraph": {
    "serviceName": "Facebook Graph API",
    "authenticationMethods": {
      "appAccessToken": {
        "type": "App access token",
        "parameters": [
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Facebook Graph API Access Token"
          }
        ]
      }
    }
  },
  "facebookleadads": {
    "serviceName": "Facebook Lead Ads",
    "authenticationMethods": {
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Facebook Lead Ads OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Facebook Lead Ads OAuth Client Secret"
          }
        ]
      }
    }
  },
  "figma": {
    "serviceName": "Figma",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Figma Personal Access Token"
          }
        ]
      }
    }
  },
  "filemaker": {
    "serviceName": "FileMaker",
    "authenticationMethods": {
      "databaseConnection": {
        "type": "Database connection",
        "parameters": [
          {
            "name": "Host",
            "type": "string",
            "required": true,
            "description": "Hostname or IP address of your FileMaker Server"
          },
          {
            "name": "Database",
            "type": "string",
            "required": true,
            "description": "Name of your FileMaker Database"
          },
          {
            "name": "Login",
            "type": "string",
            "required": true,
            "description": "Username for FileMaker Data API access"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Password for FileMaker Data API access"
          }
        ]
      }
    }
  },
  "filescan": {
    "serviceName": "Filescan",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Filescan API Key"
          }
        ]
      }
    }
  },
  "flow": {
    "serviceName": "Flow",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Organization ID",
            "type": "number",
            "required": true,
            "description": "Your Flow Organization ID"
          },
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Flow Access Token"
          }
        ]
      }
    }
  },
  "formiotrigger": {
    "serviceName": "Form.io Trigger",
    "authenticationMethods": {
      "basicAuth": {
        "type": "Basic auth",
        "parameters": [
          {
            "name": "Environment",
            "type": "options",
            "options": ["Cloud hosted", "Self-hosted"],
            "required": true,
            "description": "Environment type of your Form.io instance"
          },
          {
            "name": "Self-Hosted Domain",
            "type": "string",
            "required": false,
            "description": "Your self-hosted Form.io Domain",
            "displayOptions": {
              "show": {
                "environment": [
                  "Self-hosted"
                ]
              }
            }
          },
          {
            "name": "Email address",
            "type": "email",
            "required": true,
            "description": "Your Form.io login email address"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your Form.io login password"
          }
        ]
      }
    }
  },
  "formstacktrigger": {
    "serviceName": "Formstack Trigger",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Formstack API Access Token"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Formstack OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Formstack OAuth Client Secret"
          }
        ]
      }
    }
  },
  "fortigate": {
    "serviceName": "Fortinet FortiGate",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Fortinet FortiGate API Access Token"
          }
        ]
      }
    }
  },
  "freshdesk": {
    "serviceName": "Freshdesk",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Domain",
            "type": "string",
            "required": true,
            "description": "Your Freshdesk Subdomain"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Freshdesk API Key"
          }
        ]
      }
    }
  },
  "freshservice": {
    "serviceName": "Freshservice",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Domain",
            "type": "string",
            "required": true,
            "description": "Your Freshservice Subdomain"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Freshservice API Key"
          }
        ]
      }
    }
  },
  "freshworkscrm": {
    "serviceName": "Freshworks CRM",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Domain",
            "type": "string",
            "required": true,
            "description": "Your Freshworks CRM Subdomain"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Freshworks CRM API Key"
          }
        ]
      }
    }
  },
  "ftp": {
    "serviceName": "FTP",
    "authenticationMethods": {
      "ftpAccount": {
        "type": "FTP account",
        "parameters": [
          {
            "name": "Host",
            "type": "string",
            "required": true,
            "description": "Hostname or IP address of your FTP server"
          },
          {
            "name": "Port",
            "type": "number",
            "required": true,
            "description": "Port number for FTP connection"
          },
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Username for FTP connection"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Password for FTP connection"
          }
        ]
      },
      "sftpAccount": {
        "type": "SFTP account",
        "parameters": [
          {
            "name": "Host",
            "type": "string",
            "required": true,
            "description": "Hostname or IP address of your SFTP server"
          },
          {
            "name": "Port",
            "type": "number",
            "required": true,
            "description": "Port number for SFTP connection"
          },
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Username for SFTP connection"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Password for SFTP connection"
          },
          {
            "name": "Private Key",
            "type": "string",
            "required": false,
            "description": "Private key for SFTP connection"
          },
          {
            "name": "Passphrase",
            "type": "password",
            "required": false,
            "description": "Passphrase for encrypted Private Key"
          }
        ]
      }
    }
  },
  "getresponse": {
    "serviceName": "GetResponse",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your GetResponse API Key"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your GetResponse OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your GetResponse OAuth Client Secret"
          }
        ]
      }
    }
  },
  "ghost": {
    "serviceName": "Ghost",
    "authenticationMethods": {
      "adminApiKey": {
        "type": "Admin API key",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "URL of your Ghost admin domain"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Ghost Admin API Key"
          }
        ]
      },
      "contentApiKey": {
        "type": "Content API key",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "URL of your Ghost admin domain"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Ghost Content API Key"
          }
        ]
      }
    }
  },
  "git": {
    "serviceName": "Git",
    "authenticationMethods": {
      "basicAuth": {
        "type": "Basic auth",
        "parameters": [
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Your Git Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your Git Password"
          }
        ]
      }
    }
  },
  "github": {
    "serviceName": "GitHub",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "GitHub server",
            "type": "string",
            "required": true,
            "default": "https://api.github.com",
            "description": "URL of your GitHub server"
          },
          {
            "name": "User",
            "type": "string",
            "required": true,
            "description": "Your GitHub Username"
          },
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your GitHub Personal Access Token"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "GitHub server",
            "type": "string",
            "required": true,
            "default": "https://api.github.com",
            "description": "URL of your GitHub server"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your GitHub OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your GitHub OAuth Client Secret"
          }
        ]
      }
    }
  },
  "gitlab": {
    "serviceName": "GitLab",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "GitLab Server",
            "type": "string",
            "required": true,
            "description": "URL of your GitLab Server"
          },
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your GitLab Personal Access Token"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "GitLab Server",
            "type": "string",
            "required": true,
            "description": "URL of your GitLab Server"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your GitLab OAuth Application ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your GitLab OAuth Application Secret"
          }
        ]
      }
    }
  },
  "gong": {
    "serviceName": "Gong",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "Access Key",
            "type": "string",
            "required": true,
            "description": "Your Gong API Access Key"
          },
          {
            "name": "Access Key Secret",
            "type": "password",
            "required": true,
            "description": "Your Gong API Access Key Secret"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Gong OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Gong OAuth Client Secret"
          }
        ]
      }
    }
  },
  "googleai": {
    "serviceName": "Google Gemini(PaLM)",
    "authenticationMethods": {
      "geminiPalmApiKey": {
        "type": "Gemini(PaLM) API key",
        "parameters": [
          {
            "name": "API Host",
            "type": "string",
            "required": true,
            "default": "https://generativelanguage.googleapis.com",
            "description": "Host URL for the Google Gemini/PaLM API"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Google Gemini/PaLM API Key"
          }
        ]
      }
    }
  },
  "gotify": {
    "serviceName": "Gotify",
    "authenticationMethods": {
      "apiToken": {
        "type": "API token",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "URL of your Gotify host"
          },
          {
            "name": "App API Token",
            "type": "password",
            "required": false,
            "description": "Your Gotify App API Token (for creating messages)"
          },
          {
            "name": "Client API Token",
            "type": "password",
            "required": false,
            "description": "Your Gotify Client API Token (for other actions)"
          }
        ]
      }
    }
  },
  "gotowebinar": {
    "serviceName": "GoTo Webinar",
    "authenticationMethods": {
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your GoToWebinar OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your GoToWebinar OAuth Client Secret"
          }
        ]
      }
    }
  },
  "grafana": {
    "serviceName": "Grafana",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Base URL",
            "type": "string",
            "required": true,
            "description": "Base URL for your Grafana instance"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Grafana API Key"
          }
        ]
      }
    }
  },
  "grist": {
    "serviceName": "Grist",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Plan Type",
            "type": "options",
            "options": ["Free", "Paid", "Self-Hosted"],
            "required": true,
            "description": "Your Grist Plan Type"
          },
          {
            "name": "Custom Subdomain",
            "type": "string",
            "required": false,
            "description": "Your Grist Custom Subdomain (for Paid plan)",
            "displayOptions": {
              "show": {
                "planType": [
                  "Paid"
                ]
              }
            }
          },
          {
            "name": "Self-Hosted URL",
            "type": "string",
            "required": false,
            "description": "Your Grist Self-Hosted URL",
            "displayOptions": {
              "show": {
                "planType": [
                  "Self-Hosted"
                ]
              }
            }
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Grist API Key"
          }
        ]
      }
    }
  },
  "groq": {
    "serviceName": "Groq",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Groq API Key"
          }
        ]
      }
    }
  },
  "gumroad": {
    "serviceName": "Gumroad",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Gumroad API Access Token"
          }
        ]
      }
    }
  },
  "halopsa": {
    "serviceName": "HaloPSA",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Hosting Type",
            "type": "options",
            "options": ["On Premise Solution", "Hosted Solution Of Halo"],
            "required": true,
            "description": "Hosting type of your HaloPSA instance"
          },
          {
            "name": "Tenant",
            "type": "string",
            "required": false,
            "description": "Your HaloPSA Tenant name (for Hosted Solution)",
            "displayOptions": {
              "show": {
                "hostingType": [
                  "Hosted Solution Of Halo"
                ]
              }
            }
          },
          {
            "name": "HaloPSA Authorisation Server URL",
            "type": "string",
            "required": true,
            "description": "Your HaloPSA Authorisation Server URL"
          },
          {
            "name": "Resource Server",
            "type": "string",
            "required": true,
            "description": "Your HaloPSA Resource Server URL"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your HaloPSA API Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your HaloPSA API Client Secret"
          }
        ]
      }
    }
  },
  "harvest": {
    "serviceName": "Harvest",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API Access Token",
        "parameters": [
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Harvest Personal Access Token"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Harvest OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Harvest OAuth Client Secret"
          }
        ]
      }
    }
  },
  "helpscout": {
    "serviceName": "Help Scout",
    "authenticationMethods": {
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Help Scout OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Help Scout OAuth Client Secret"
          }
        ]
      }
    }
  },
  "highlevel": {
    "serviceName": "HighLevel",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your HighLevel API Key (for API v1)"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your HighLevel OAuth Client ID (for API v2)"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your HighLevel OAuth Client Secret (for API v2)"
          },
          {
            "name": "Scopes",
            "type": "string",
            "required": true,
            "description": "Your HighLevel OAuth Scopes (space-separated)"
          }
        ]
      }
    }
  },
  "homeassistant": {
    "serviceName": "Home Assistant",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "Host",
            "type": "string",
            "required": true,
            "description": "Hostname or IP address of your Home Assistant"
          },
          {
            "name": "Port",
            "type": "number",
            "required": true,
            "default": 8123,
            "description": "Port number for Home Assistant connection"
          },
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Home Assistant Long-Lived Access Token"
          },
          {
            "name": "SSL",
            "type": "boolean",
            "required": false,
            "description": "Whether to use SSL for Home Assistant connection"
          }
        ]
      }
    }
  },
  "httprequest": {
    "serviceName": "HTTP Request",
    "authenticationMethods": {
      "predefinedCredentialType": {
        "type": "Predefined credential type",
        "parameters": []
      },
      "basicAuth": {
        "type": "Basic auth",
        "parameters": [
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Username for Basic Authentication"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Password for Basic Authentication"
          }
        ]
      },
      "digestAuth": {
        "type": "Digest auth",
        "parameters": [
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Username for Digest Authentication"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Password for Digest Authentication"
          }
        ]
      },
      "headerAuth": {
        "type": "Header auth",
        "parameters": [
          {
            "name": "Name",
            "type": "string",
            "required": true,
            "description": "Header name for authentication"
          },
          {
            "name": "Value",
            "type": "string",
            "required": true,
            "description": "Header value for authentication"
          }
        ]
      },
      "oauth1": {
        "type": "OAuth1",
        "parameters": [
          {
            "name": "Authorization URL",
            "type": "string",
            "required": true,
            "description": "Authorization URL for OAuth1"
          },
          {
            "name": "Access Token URL",
            "type": "string",
            "required": true,
            "description": "Access Token URL for OAuth1"
          },
          {
            "name": "Consumer Key",
            "type": "string",
            "required": true,
            "description": "Consumer Key for OAuth1"
          },
          {
            "name": "Consumer Secret",
            "type": "password",
            "required": true,
            "description": "Consumer Secret for OAuth1"
          },
          {
            "name": "Request Token URL",
            "type": "string",
            "required": true,
            "description": "Request Token URL for OAuth1"
          },
          {
            "name": "Signature Method",
            "type": "options",
            "options": ["HMAC-SHA1", "HMAC-SHA256", "HMAC-SHA512"],
            "required": true,
            "description": "Signature method for OAuth1"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Grant Type",
            "type": "options",
            "options": ["Authorization Code", "Client Credentials", "PKCE"],
            "required": true,
            "description": "OAuth2 Grant Type"
          },
          {
            "name": "Authorization URL",
            "type": "string",
            "required": false,
            "description": "Authorization URL for OAuth2 (for Authorization Code and PKCE)",
            "displayOptions": {
              "show": {
                "grantType": [
                  "Authorization Code",
                  "PKCE"
                ]
              }
            }
          },
          {
            "name": "Access Token URL",
            "type": "string",
            "required": true,
            "description": "Access Token URL for OAuth2"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Client ID for OAuth2"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Client Secret for OAuth2"
          },
          {
            "name": "Scope",
            "type": "string",
            "required": false,
            "description": "Scopes for OAuth2 (space-separated)"
          },
          {
            "name": "Auth URI Query Parameters",
            "type": "json",
            "required": false,
            "description": "Additional query parameters for Auth URI"
          },
          {
            "name": "Authentication",
            "type": "options",
            "options": ["Header", "Body"],
            "required": true,
            "description": "Authentication method for OAuth2"
          },
          {
            "name": "Ignore SSL Issues",
            "type": "boolean",
            "required": false,
            "description": "Whether to ignore SSL certificate validation issues"
          }
        ]
      },
      "queryAuth": {
        "type": "Query auth",
        "parameters": [
          {
            "name": "Name",
            "type": "string",
            "required": true,
            "description": "Query parameter name for authentication"
          },
          {
            "name": "Value",
            "type": "string",
            "required": true,
            "description": "Query parameter value for authentication"
          }
        ]
      },
      "customAuth": {
        "type": "Custom auth",
        "parameters": [
          {
            "name": "Custom Auth JSON",
            "type": "json",
            "required": true,
            "description": "Custom authentication JSON object"
          }
        ]
      }
    }
  },
  "hubspot": {
    "serviceName": "HubSpot",
    "authenticationMethods": {
      "appToken": {
        "type": "App token",
        "parameters": [
          {
            "name": "App Token",
            "type": "password",
            "required": true,
            "description": "Your HubSpot App Token"
          }
        ]
      },
      "developerApiKey": {
        "type": "Developer API key",
        "parameters": [
          {
            "name": "App ID",
            "type": "string",
            "required": true,
            "description": "Your HubSpot App ID"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your HubSpot OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your HubSpot OAuth Client Secret"
          },
          {
            "name": "Developer API Key",
            "type": "password",
            "required": true,
            "description": "Your HubSpot Developer API Key"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "App ID",
            "type": "string",
            "required": true,
            "description": "Your HubSpot App ID"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your HubSpot OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your HubSpot OAuth Client Secret"
          }
        ]
      }
    }
  },
  "huggingface": {
    "serviceName": "Hugging Face",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Hugging Face API Key (API token)"
          }
        ]
      }
    }
  },
  "humanticai": {
    "serviceName": "Humantic AI",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Humantic AI API Key"
          }
        ]
      }
    }
  },
  "hunter": {
    "serviceName": "Hunter",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Hunter API Key"
          }
        ]
      }
    }
  },
  "hybridanalysis": {
    "serviceName": "Hybrid Analysis",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Hybrid Analysis API Key"
          }
        ]
      }
    }
  },
  "impervawaf": {
    "serviceName": "Imperva WAF",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API ID",
            "type": "string",
            "required": true,
            "description": "Your Imperva WAF API ID"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Imperva WAF API Key"
          }
        ]
      }
    }
  },
  "index": {
    "serviceName": "Index",
    "authenticationMethods": {}
  },
  "intercom": {
    "serviceName": "Intercom",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Intercom API Key (Access Token)"
          }
        ]
      }
    }
  },
  "invoiceninja": {
    "serviceName": "Invoice Ninja",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "URL",
            "type": "options",
            "options": ["https://app.invoiceninja.com", "https://invoiceninja.com"],
            "required": true,
            "description": "URL of your Invoice Ninja instance"
          },
          {
            "name": "API Token",
            "type": "password",
            "required": true,
            "description": "Your Invoice Ninja API Token"
          },
          {
            "name": "Secret",
            "type": "password",
            "required": false,
            "description": "Your Invoice Ninja API Secret (for v5 API users)"
          }
        ]
      }
    }
  },
  "iterable": {
    "serviceName": "Iterable",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Iterable API Key"
          }
        ]
      }
    }
  },
  "jenkins": {
    "serviceName": "Jenkins",
    "authenticationMethods": {
      "apiToken": {
        "type": "API token",
        "parameters": [
          {
            "name": "Jenkins Instance URL",
            "type": "string",
            "required": true,
            "description": "URL of your Jenkins instance"
          },
          {
            "name": "Jenkins Username",
            "type": "string",
            "required": true,
            "description": "Your Jenkins Username"
          },
          {
            "name": "Personal API Token",
            "type": "password",
            "required": true,
            "description": "Your Jenkins Personal API Token"
          }
        ]
      }
    }
  },
  "jira": {
    "serviceName": "Jira",
    "authenticationMethods": {
      "swCloudApiToken": {
        "type": "SW Cloud API token",
        "parameters": [
          {
            "name": "Domain",
            "type": "string",
            "required": true,
            "description": "Your Jira Software Cloud Domain"
          },
          {
            "name": "Email",
            "type": "email",
            "required": true,
            "description": "Email address associated with Jira account"
          },
          {
            "name": "API Token",
            "type": "password",
            "required": true,
            "description": "Your Jira Software Cloud API Token"
          }
        ]
      },
      "swServerAccount": {
        "type": "SW Server account",
        "parameters": [
          {
            "name": "Domain",
            "type": "string",
            "required": true,
            "description": "Your Jira Software Server Domain"
          },
          {
            "name": "Email",
            "type": "email",
            "required": true,
            "description": "Email address associated with Jira account"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your Jira Software Server Password"
          }
        ]
      }
    }
  },
  "jotform": {
    "serviceName": "JotForm",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Domain",
            "type": "options",
            "options": ["api.jotform.com", "eu-api.jotform.com", "hipaa-api.jotform.com"],
            "required": true,
            "description": "Your JotForm API Domain"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your JotForm API Key"
          }
        ]
      }
    }
  },
  "jwt": {
    "serviceName": "JWT",
    "authenticationMethods": {
      "passphrase": {
        "type": "Passphrase",
        "parameters": [
          {
            "name": "Secret",
            "type": "password",
            "required": true,
            "description": "Your JWT Passphrase Secret"
          },
          {
            "name": "Algorithm",
            "type": "options",
            "options": ["HS256", "HS384", "HS512"],
            "required": true,
            "description": "Algorithm for signing JWT with Passphrase"
          }
        ]
      },
      "privateKeyPemKey": {
        "type": "Private key (PEM key)",
        "parameters": [
          {
            "name": "Private Key",
            "type": "string",
            "required": true,
            "description": "Your JWT Private Key (PEM format)"
          },
          {
            "name": "Public Key",
            "type": "string",
            "required": true,
            "description": "Your JWT Public Key (PEM format)"
          },
          {
            "name": "Algorithm",
            "type": "options",
            "options": ["RS256", "RS384", "RS512", "ES256", "ES384", "ES512", "PS256", "PS384", "PS512"],
            "required": true,
            "description": "Algorithm for signing JWT with Private Key"
          }
        ]
      }
    }
  },
  "kafka": {
    "serviceName": "Kafka",
    "authenticationMethods": {
      "clientId": {
        "type": "Client ID",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Kafka Client ID"
          },
          {
            "name": "Brokers",
            "type": "string",
            "required": true,
            "description": "Comma-separated list of Kafka brokers"
          },
          {
            "name": "SSL",
            "type": "boolean",
            "required": false,
            "description": "Whether to use SSL for Kafka connection"
          },
          {
            "name": "Authentication",
            "type": "boolean",
            "required": false,
            "description": "Whether to use SASL authentication"
          },
          {
            "name": "Username",
            "type": "string",
            "required": false,
            "description": "Username for SASL authentication",
            "displayOptions": {
              "show": {
                "authentication": [
                  true
                ]
              }
            }
          },
          {
            "name": "Password",
            "type": "password",
            "required": false,
            "description": "Password for SASL authentication",
            "displayOptions": {
              "show": {
                "authentication": [
                  true
                ]
              }
            }
          },
          {
            "name": "SASL Mechanism",
            "type": "options",
            "options": ["Plain", "scram-sha-256", "scram-sha-512"],
            "required": false,
            "description": "SASL mechanism for authentication",
            "displayOptions": {
              "show": {
                "authentication": [
                  true
                ]
              }
            }
          }
        ]
      }
    }
  },
  "keap": {
    "serviceName": "Keap",
    "authenticationMethods": {
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Keap OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Keap OAuth Client Secret"
          }
        ]
      }
    }
  },
  "kibana": {
    "serviceName": "Kibana",
    "authenticationMethods": {
      "basicAuth": {
        "type": "Basic auth",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "URL of your Kibana instance"
          },
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Your Kibana Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your Kibana Password"
          }
        ]
      }
    }
  },
  "kitemaker": {
    "serviceName": "Kitemaker",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Kitemaker Personal Access Token"
          }
        ]
      }
    }
  },
  "kobotoolbox": {
    "serviceName": "KoboToolbox",
    "authenticationMethods": {
      "apiToken": {
        "type": "API token",
        "parameters": [
          {
            "name": "API Root URL",
            "type": "options",
            "options": ["https://kf.kobotoolbox.org", "https://eu.kobotoolbox.org"],
            "required": true,
            "description": "Root URL of your KoboToolbox server"
          },
          {
            "name": "API Token",
            "type": "password",
            "required": true,
            "description": "Your KoboToolbox API Token"
          }
        ]
      }
    }
  },
  "ldap": {
    "serviceName": "LDAP",
    "authenticationMethods": {
      "ldapServerDetails": {
        "type": "LDAP server details",
        "parameters": [
          {
            "name": "LDAP Server Address",
            "type": "string",
            "required": true,
            "description": "Address of your LDAP server"
          },
          {
            "name": "LDAP Server Port",
            "type": "number",
            "required": true,
            "description": "Port number for LDAP connection"
          },
          {
            "name": "Binding DN",
            "type": "string",
            "required": true,
            "description": "Binding Distinguished Name for LDAP server"
          },
          {
            "name": "Binding Password",
            "type": "password",
            "required": true,
            "description": "Password for LDAP Binding DN"
          },
          {
            "name": "Connection Security",
            "type": "options",
            "options": ["None", "TLS", "STARTTLS"],
            "required": true,
            "description": "Security protocol for LDAP connection"
          },
          {
            "name": "Connection Timeout",
            "type": "number",
            "required": false,
            "description": "Connection timeout in seconds"
          }
        ]
      }
    }
  },
  "lemlist": {
    "serviceName": "Lemlist",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Lemlist API Key"
          }
        ]
      }
    }
  },
  "line": {
    "serviceName": "Line",
    "authenticationMethods": {
      "notifyOAuth2": {
        "type": "Notify OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Line Notify OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Line Notify OAuth Client Secret"
          }
        ]
      }
    }
  },
  "linear": {
    "serviceName": "Linear",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Linear Personal API Key"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Actor",
            "type": "options",
            "options": ["User", "Application"],
            "required": true,
            "description": "Actor type for OAuth2 application"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Linear OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Linear OAuth Client Secret"
          },
          {
            "name": "Include Admin Scope",
            "type": "boolean",
            "required": false,
            "description": "Whether to include admin scope (required for Linear Trigger)"
          }
        ]
      }
    }
  },
  "lingvanex": {
    "serviceName": "LingvaNex",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your LingvaNex API Key"
          }
        ]
      }
    }
  },
  "linkedin": {
    "serviceName": "LinkedIn",
    "authenticationMethods": {
      "communityManagementOAuth2": {
        "type": "Community Management OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your LinkedIn OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your LinkedIn OAuth Client Secret"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your LinkedIn OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your LinkedIn OAuth Client Secret"
          },
          {
            "name": "Organization Support",
            "type": "boolean",
            "required": false,
            "description": "Whether to request permission to post as an organization"
          },
          {
            "name": "Legacy",
            "type": "boolean",
            "required": false,
            "description": "Whether to use legacy scopes (r_liteprofile and r_emailaddress)"
          }
        ]
      }
    }
  },
  "lonescale": {
    "serviceName": "LoneScale",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your LoneScale API Key"
          }
        ]
      }
    }
  },
  "magento2": {
    "serviceName": "Magento 2",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "Host",
            "type": "string",
            "required": true,
            "description": "URL of your Magento store"
          },
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Magento 2 API Access Token"
          }
        ]
      }
    }
  },
  "mailcheck": {
    "serviceName": "Mailcheck",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Mailcheck API Key"
          }
        ]
      }
    }
  },
  "mailchimp": {
    "serviceName": "Mailchimp",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Mailchimp API Key"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Mailchimp OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Mailchimp OAuth Client Secret"
          }
        ]
      }
    }
  },
  "mailerlite": {
    "serviceName": "MailerLite",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your MailerLite API Key"
          },
          {
            "name": "Classic API",
            "type": "boolean",
            "required": false,
            "description": "Whether API key is for MailerLite Classic account"
          }
        ]
      }
    }
  },
  "mailgun": {
    "serviceName": "Mailgun",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Domain",
            "type": "options",
            "options": ["api.mailgun.net", "api.eu.mailgun.net"],
            "required": true,
            "description": "Your Mailgun API Domain"
          },
          {
            "name": "Email Domain",
            "type": "string",
            "required": true,
            "description": "Your Mailgun Email Domain"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Mailgun API Key"
          }
        ]
      }
    }
  },
  "mailjet": {
    "serviceName": "Mailjet",
    "authenticationMethods": {
      "emailApiKey": {
        "type": "Email API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Mailjet Email API Key"
          },
          {
            "name": "Secret Key",
            "type": "password",
            "required": true,
            "description": "Your Mailjet Email API Secret Key"
          },
          {
            "name": "Sandbox Mode",
            "type": "boolean",
            "required": false,
            "description": "Whether to use Mailjet Sandbox Mode"
          }
        ]
      },
      "smsToken": {
        "type": "SMS token",
        "parameters": [
          {
            "name": "Token",
            "type": "password",
            "required": true,
            "description": "Your Mailjet SMS API Token"
          }
        ]
      }
    }
  },
  "malcore": {
    "serviceName": "Malcore",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Malcore API Key"
          }
        ]
      }
    }
  },
  "mandrill": {
    "serviceName": "Mandrill",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Mandrill API Key"
          }
        ]
      }
    }
  },
  "marketstack": {
    "serviceName": "Marketstack",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Use HTTPS",
            "type": "boolean",
            "required": true,
            "description": "Whether to use HTTPS for Marketstack API requests"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Marketstack API Key"
          }
        ]
      }
    }
  },
  "matrix": {
    "serviceName": "Matrix",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "Homeserver URL",
            "type": "string",
            "required": true,
            "default": "https://matrix.org",
            "description": "URL of your Matrix Homeserver"
          },
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Matrix API Access Token"
          }
        ]
      }
    }
  },
  "mattermost": {
    "serviceName": "Mattermost",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "Base URL",
            "type": "string",
            "required": true,
            "description": "Base URL of your Mattermost instance"
          },
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Mattermost Personal Access Token"
          },
          {
            "name": "Ignore SSL Issues",
            "type": "boolean",
            "required": false,
            "description": "Whether to ignore SSL certificate validation issues"
          }
        ]
      }
    }
  },
  "mautic": {
    "serviceName": "Mautic",
    "authenticationMethods": {
      "basicAuth": {
        "type": "Basic auth",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "URL of your Mautic instance"
          },
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Your Mautic Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your Mautic Password"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "URL of your Mautic instance"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Mautic OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Mautic OAuth Client Secret"
          }
        ]
      }
    }
  },
  "medium": {
    "serviceName": "Medium",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Medium API Access Token"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Medium OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Medium OAuth Client Secret"
          }
        ]
      }
    }
  },
  "messagebird": {
    "serviceName": "MessageBird",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your MessageBird API Key"
          }
        ]
      }
    }
  },
  "metabase": {
    "serviceName": "Metabase",
    "authenticationMethods": {
      "basicAuth": {
        "type": "Basic auth",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "Base URL of your Metabase instance"
          },
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Your Metabase Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your Metabase Password"
          }
        ]
      }
    }
  },
  "microsoft": {
    "serviceName": "Microsoft",
    "authenticationMethods": {
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Scope",
            "type": "string",
            "required": false,
            "description": "Scopes for Microsoft services (space-separated)"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Microsoft OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Microsoft OAuth Client Secret"
          },
          {
            "name": "Dynamics Domain",
            "type": "string",
            "required": false,
            "description": "Your Dynamics Domain (for Dynamics services)"
          },
          {
            "name": "Region",
            "type": "options",
            "options": ["Americas", "Europe", "Asia Pacific", "Oceania", "Japan", "Canada", "India", "United Kingdom", "Africa"],
            "required": false,
            "description": "Your Dynamics data center Region (for Dynamics services)"
          },
          {
            "name": "Use Shared Inbox",
            "type": "boolean",
            "required": false,
            "description": "Whether to use a shared inbox (for Outlook)"
          },
          {
            "name": "User Principal Name",
            "type": "string",
            "required": false,
            "description": "User Principal Name of the shared inbox (for Outlook)",
            "displayOptions": {
              "show": {
                "useSharedInbox": [
                  true
                ]
              }
            }
          },
          {
            "name": "Subdomain",
            "type": "string",
            "required": false,
            "description": "Your SharePoint Subdomain (for SharePoint services)"
          }
        ]
      }
    }
  },
  "microsoftazuremonitor": {
    "serviceName": "Microsoft Azure Monitor",
    "authenticationMethods": {
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Microsoft Azure Monitor OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Microsoft Azure Monitor OAuth Client Secret"
          },
          {
            "name": "Tenant ID",
            "type": "string",
            "required": true,
            "description": "Your Microsoft Azure Monitor Tenant ID"
          },
          {
            "name": "Resource",
            "type": "string",
            "required": true,
            "description": "Resource you plan to access"
          }
        ]
      }
    }
  },
  "microsoftentra": {
    "serviceName": "Microsoft Entra ID",
    "authenticationMethods": {
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Microsoft Entra ID OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Microsoft Entra ID OAuth Client Secret"
          }
        ]
      }
    }
  },
  "microsoftsql": {
    "serviceName": "Microsoft SQL",
    "authenticationMethods": {
      "sqlDatabaseConnection": {
        "type": "SQL database connection",
        "parameters": [
          {
            "name": "Server",
            "type": "string",
            "required": true,
            "description": "Your Microsoft SQL Server Host Name"
          },
          {
            "name": "Database",
            "type": "string",
            "required": true,
            "description": "Your Microsoft SQL Database Name"
          },
          {
            "name": "User",
            "type": "string",
            "required": true,
            "description": "Your Microsoft SQL Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your Microsoft SQL Password"
          },
          {
            "name": "Port",
            "type": "number",
            "required": true,
            "default": 1433,
            "description": "Port number for SQL connection"
          },
          {
            "name": "Domain",
            "type": "string",
            "required": false,
            "description": "Your Microsoft SQL Domain Name (if applicable)"
          },
          {
            "name": "TLS",
            "type": "boolean",
            "required": false,
            "description": "Whether to use TLS for SQL connection"
          },
          {
            "name": "Ignore SSL Issues",
            "type": "boolean",
            "required": false,
            "description": "Whether to ignore SSL certificate validation issues"
          },
          {
            "name": "Connect Timeout",
            "type": "number",
            "required": false,
            "description": "Connection timeout in milliseconds"
          },
          {
            "name": "Request Timeout",
            "type": "number",
            "required": false,
            "description": "Request timeout in milliseconds"
          },
          {
            "name": "TDS Version",
            "type": "options",
            "options": ["7_4 (SQL Server 2012 ~ 2019)", "7_3_B (SQL Server 2008R2)", "7_3_A (SQL Server 2008)", "7_2 (SQL Server 2005)", "7_1 (SQL Server 2000)"],
            "required": false,
            "description": "TDS Version for SQL connection"
          }
        ]
      }
    }
  },
  "mindee": {
    "serviceName": "Mindee",
    "authenticationMethods": {
      "invoiceApiKey": {
        "type": "Invoice API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Mindee Invoice OCR API Key"
          }
        ]
      },
      "receiptApiKey": {
        "type": "Receipt API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Mindee Receipt OCR API Key"
          }
        ]
      }
    }
  },
  "miro": {
    "serviceName": "Miro",
    "authenticationMethods": {
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Miro OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Miro OAuth Client Secret"
          }
        ]
      }
    }
  },
  "misp": {
    "serviceName": "MISP",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Base URL",
            "type": "string",
            "required": true,
            "description": "Base URL of your MISP instance"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your MISP API Key (Automation key)"
          },
          {
            "name": "Allow Unauthorized Certificates",
            "type": "boolean",
            "required": false,
            "description": "Whether to allow unauthorized SSL certificates"
          }
        ]
      }
    }
  },
  "mist": {
    "serviceName": "Mist",
    "authenticationMethods": {
      "apiToken": {
        "type": "API token",
        "parameters": [
          {
            "name": "Region",
            "type": "options",
            "options": ["Europe", "Global"],
            "required": true,
            "description": "Your Mist cloud environment Region"
          },
          {
            "name": "API Token",
            "type": "password",
            "required": true,
            "description": "Your Mist API Token"
          }
        ]
      }
    }
  },
  "mistral": {
    "serviceName": "Mistral Cloud",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Mistral Cloud API Key"
          }
        ]
      }
    }
  },
  "mocean": {
    "serviceName": "Mocean",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Mocean API Key"
          },
          {
            "name": "API Secret",
            "type": "password",
            "required": true,
            "description": "Your Mocean API Secret"
          }
        ]
      }
    }
  },
  "mondaycom": {
    "serviceName": "monday.com",
    "authenticationMethods": {
      "apiToken": {
        "type": "API token",
        "parameters": [
          {
            "name": "Token V2",
            "type": "password",
            "required": true,
            "description": "Your monday.com API Token V2"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your monday.com OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your monday.com OAuth Client Secret"
          }
        ]
      }
    }
  },
  "mongodb": {
    "serviceName": "MongoDB",
    "authenticationMethods": {
      "databaseConnectionConnectionString": {
        "type": "Database connection - Connection string",
        "parameters": [
          {
            "name": "Connection String",
            "type": "string",
            "required": true,
            "description": "Your MongoDB Connection String"
          },
          {
            "name": "Database",
            "type": "string",
            "required": true,
            "description": "Your MongoDB Database name"
          },
          {
            "name": "Use TLS",
            "type": "boolean",
            "required": false,
            "description": "Whether to use TLS for MongoDB connection"
          },
          {
            "name": "CA Certificate",
            "type": "string",
            "required": false,
            "description": "CA Certificate for TLS connection",
            "displayOptions": {
              "show": {
                "ssl": [
                  true
                ]
              }
            }
          },
          {
            "name": "Public Client Certificate",
            "type": "string",
            "required": false,
            "description": "Public Client Certificate for TLS connection",
            "displayOptions": {
              "show": {
                "ssl": [
                  true
                ]
              }
            }
          },
          {
            "name": "Private Client Key",
            "type": "string",
            "required": false,
            "description": "Private Client Key for TLS connection",
            "displayOptions": {
              "show": {
                "ssl": [
                  true
                ]
              }
            }
          },
          {
            "name": "Passphrase",
            "type": "password",
            "required": false,
            "description": "Passphrase for encrypted Private Client Key",
            "displayOptions": {
              "show": {
                "ssl": [
                  true
                ]
              }
            }
          }
        ]
      },
      "databaseConnectionValues": {
        "type": "Database connection - Values",
        "parameters": [
          {
            "name": "Host",
            "type": "string",
            "required": true,
            "description": "Your MongoDB Hostname or IP address"
          },
          {
            "name": "Port",
            "type": "number",
            "required": true,
            "description": "Port number for MongoDB connection"
          },
          {
            "name": "Database",
            "type": "string",
            "required": true,
            "description": "Your MongoDB Database name"
          },
          {
            "name": "User",
            "type": "string",
            "required": true,
            "description": "Your MongoDB Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your MongoDB Password"
          },
          {
            "name": "Use TLS",
            "type": "boolean",
            "required": false,
            "description": "Whether to use TLS for MongoDB connection"
          },
          {
            "name": "CA Certificate",
            "type": "string",
            "required": false,
            "description": "CA Certificate for TLS connection",
            "displayOptions": {
              "show": {
                "ssl": [
                  true
                ]
              }
            }
          },
          {
            "name": "Public Client Certificate",
            "type": "string",
            "required": false,
            "description": "Public Client Certificate for TLS connection",
            "displayOptions": {
              "show": {
                "ssl": [
                  true
                ]
              }
            }
          },
          {
            "name": "Private Client Key",
            "type": "string",
            "required": false,
            "description": "Private Client Key for TLS connection",
            "displayOptions": {
              "show": {
                "ssl": [
                  true
                ]
              }
            }
          },
          {
            "name": "Passphrase",
            "type": "password",
            "required": false,
            "description": "Passphrase for encrypted Private Client Key",
            "displayOptions": {
              "show": {
                "ssl": [
                  true
                ]
              }
            }
          }
        ]
      }
    }
  },
  "monicacrm": {
    "serviceName": "Monica CRM",
    "authenticationMethods": {
      "apiToken": {
        "type": "API token",
        "parameters": [
          {
            "name": "Environment",
            "type": "options",
            "options": ["Cloud-Hosted", "Self-Hosted"],
            "required": true,
            "description": "Environment type of your Monica instance"
          },
          {
            "name": "Self-Hosted Domain",
            "type": "string",
            "required": false,
            "description": "Your self-hosted Monica Domain",
            "displayOptions": {
              "show": {
                "environment": [
                  "Self-Hosted"
                ]
              }
            }
          },
          {
            "name": "API Token",
            "type": "password",
            "required": true,
            "description": "Your Monica CRM API Token"
          }
        ]
      }
    }
  },
  "motorhead": {
    "serviceName": "Motorhead",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Host URL",
            "type": "string",
            "required": true,
            "description": "URL of your Motorhead instance"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Motorhead API Key"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Motorhead Client ID"
          }
        ]
      }
    }
  },
  "mqtt": {
    "serviceName": "MQTT",
    "authenticationMethods": {
      "brokerConnection": {
        "type": "Broker connection",
        "parameters": [
          {
            "name": "Protocol",
            "type": "options",
            "options": ["Mqtt", "Mqtts", "Ws"],
            "required": true,
            "description": "Protocol for MQTT connection"
          },
          {
            "name": "Host",
            "type": "string",
            "required": true,
            "description": "Hostname or IP address of your MQTT broker"
          },
          {
            "name": "Port",
            "type": "number",
            "required": true,
            "description": "Port number for MQTT connection"
          },
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Username for MQTT broker authentication"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Password for MQTT broker authentication"
          },
          {
            "name": "Clean Session",
            "type": "boolean",
            "required": false,
            "description": "Whether to use a clean session for MQTT connection"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": false,
            "description": "Client ID for MQTT connection"
          },
          {
            "name": "SSL",
            "type": "boolean",
            "required": false,
            "description": "Whether to use SSL for MQTT connection"
          },
          {
            "name": "Passwordless",
            "type": "boolean",
            "required": false,
            "description": "Whether to use passwordless connection with certificates",
            "displayOptions": {
              "show": {
                "ssl": [
                  true
                ]
              }
            }
          },
          {
            "name": "Reject Unauthorized Certificate",
            "type": "boolean",
            "required": false,
            "description": "Whether to reject unauthorized SSL certificates",
            "displayOptions": {
              "show": {
                "ssl": [
                  true
                ],
                "passwordless": [
                  true
                ]
              }
            }
          },
          {
            "name": "Client Certificate",
            "type": "string",
            "required": false,
            "description": "Client certificate for passwordless SSL connection",
            "displayOptions": {
              "show": {
                "ssl": [
                  true
                ],
                "passwordless": [
                  true
                ]
              }
            }
          },
          {
            "name": "Client Key",
            "type": "string",
            "required": false,
            "description": "Client key for passwordless SSL connection",
            "displayOptions": {
              "show": {
                "ssl": [
                  true
                ],
                "passwordless": [
                  true
                ]
              }
            }
          },
          {
            "name": "Passphrase",
            "type": "password",
            "required": false,
            "description": "Passphrase for encrypted Client Key",
            "displayOptions": {
              "show": {
                "ssl": [
                  true
                ],
                "passwordless": [
                  true
                ]
              }
            }
          },
          {
            "name": "CA Certificates",
            "type": "string",
            "required": false,
            "description": "CA certificates for SSL connection",
            "displayOptions": {
              "show": {
                "ssl": [
                  true
                ],
                "passwordless": [
                  false
                ]
              }
            }
          }
        ]
      }
    }
  },
  "msg91": {
    "serviceName": "MSG91",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Authentication Key",
            "type": "password",
            "required": true,
            "description": "Your MSG91 Authentication Key"
          }
        ]
      }
    }
  },
  "mysql": {
    "serviceName": "MySQL",
    "authenticationMethods": {
      "databaseConnection": {
        "type": "Database connection",
        "parameters": [
          {
            "name": "Host",
            "type": "string",
            "required": true,
            "description": "Your MySQL Hostname or IP address"
          },
          {
            "name": "Port",
            "type": "number",
            "required": true,
            "default": 3306,
            "description": "Port number for MySQL connection"
          },
          {
            "name": "Database",
            "type": "string",
            "required": true,
            "description": "Your MySQL Database name"
          },
          {
            "name": "User",
            "type": "string",
            "required": true,
            "description": "Your MySQL Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your MySQL Password"
          },
          {
            "name": "Connect Timeout",
            "type": "number",
            "required": false,
            "default": 1000,
            "description": "Connection timeout in milliseconds"
          },
          {
            "name": "SSL",
            "type": "boolean",
            "required": false,
            "description": "Whether to use SSL for MySQL connection"
          },
          {
            "name": "SSH Tunnel",
            "type": "boolean",
            "required": false,
            "description": "Whether to use SSH tunnel for MySQL connection"
          },
          {
            "name": "SSH Authenticate with",
            "type": "options",
            "options": ["Password", "Private Key"],
            "required": false,
            "description": "Authentication method for SSH tunnel",
            "displayOptions": {
              "show": {
                "sshTunnel": [
                  true
                ]
              }
            }
          },
          {
            "name": "SSH Host",
            "type": "string",
            "required": false,
            "description": "Hostname or IP address of your SSH server",
            "displayOptions": {
              "show": {
                "sshTunnel": [
                  true
                ]
              }
            }
          },
          {
            "name": "SSH Port",
            "type": "number",
            "required": false,
            "default": 22,
            "description": "Port number for SSH connection",
            "displayOptions": {
              "show": {
                "sshTunnel": [
                  true
                ]
              }
            }
          },
          {
            "name": "SSH Postgres Port",
            "type": "number",
            "required": false,
            "description": "Port number for Postgres server behind SSH tunnel",
            "displayOptions": {
              "show": {
                "sshTunnel": [
                  true
                ]
              }
            }
          },
          {
            "name": "SSH User",
            "type": "string",
            "required": false,
            "description": "Username for SSH connection",
            "displayOptions": {
              "show": {
                "sshTunnel": [
                  true
                ]
              }
            }
          },
          {
            "name": "SSH Password",
            "type": "password",
            "required": false,
            "description": "Password for SSH connection",
            "displayOptions": {
              "show": {
                "sshTunnel": [
                  true
                ],
                "sshAuthenticateWith": [
                  "Password"
                ]
              }
            }
          },
          {
            "name": "Private Key",
            "type": "string",
            "required": false,
            "description": "Private key for SSH connection",
            "displayOptions": {
              "show": {
                "sshTunnel": [
                  true
                ],
                "sshAuthenticateWith": [
                  "Private Key"
                ]
              }
            }
          },
          {
            "name": "Passphrase",
            "type": "password",
            "required": false,
            "description": "Passphrase for encrypted Private Key",
            "displayOptions": {
              "show": {
                "sshTunnel": [
                  true
                ],
                "sshAuthenticateWith": [
                  "Private Key"
                ]
              }
            }
          },
          {
            "name": "CA Certificate",
            "type": "string",
            "required": false,
            "description": "CA certificate for SSL connection",
            "displayOptions": {
              "show": {
                "ssl": [
                  true
                ]
              }
            }
          },
          {
            "name": "Client Private Key",
            "type": "string",
            "required": false,
            "description": "Client private key for SSL connection",
            "displayOptions": {
              "show": {
                "ssl": [
                  true
                ]
              }
            }
          },
          {
            "name": "Client Certificate",
            "type": "string",
            "required": false,
            "description": "Client certificate for SSL connection",
            "displayOptions": {
              "show": {
                "ssl": [
                  true
                ]
              }
            }
          }
        ]
      }
    }
  },
  "nasa": {
    "serviceName": "NASA",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your NASA API Key"
          }
        ]
      }
    }
  },
  "netlify": {
    "serviceName": "Netlify",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Netlify API Access Token"
          }
        ]
      }
    }
  },
  "netscaleradc": {
    "serviceName": "Netscaler ADC",
    "authenticationMethods": {
      "basicAuth": {
        "type": "Basic auth",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "URL of your NetScaler/Citrix ADC instance"
          },
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Your NetScaler/Citrix ADC Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your NetScaler/Citrix ADC Password"
          }
        ]
      }
    }
  },
  "nextcloud": {
    "serviceName": "Nextcloud",
    "authenticationMethods": {
      "basicAuth": {
        "type": "Basic auth",
        "parameters": [
          {
            "name": "Web DAV URL",
            "type": "string",
            "required": true,
            "description": "Your Nextcloud WebDAV URL"
          },
          {
            "name": "User",
            "type": "string",
            "required": true,
            "description": "Your Nextcloud Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your Nextcloud Password or App Password"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "URL of your Nextcloud instance"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Nextcloud OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Nextcloud OAuth Client Secret"
          },
          {
            "name": "Web DAV URL",
            "type": "string",
            "required": true,
            "description": "Your Nextcloud WebDAV URL"
          }
        ]
      }
    }
  },
  "nocodb": {
    "serviceName": "NocoDB",
    "authenticationMethods": {
      "apiToken": {
        "type": "API token",
        "parameters": [
          {
            "name": "Host",
            "type": "string",
            "required": true,
            "description": "Host URL of your NocoDB instance"
          },
          {
            "name": "API Token",
            "type": "password",
            "required": true,
            "description": "Your NocoDB API Token"
          }
        ]
      },
      "userAuthToken": {
        "type": "User auth token",
        "parameters": [
          {
            "name": "Host",
            "type": "string",
            "required": true,
            "description": "Host URL of your NocoDB instance"
          },
          {
            "name": "User Token",
            "type": "password",
            "required": true,
            "description": "Your NocoDB User Auth Token"
          }
        ]
      }
    }
  },
  "notion": {
    "serviceName": "Notion",
    "authenticationMethods": {
      "apiIntegrationToken": {
        "type": "API integration token",
        "parameters": [
          {
            "name": "Internal Integration Secret",
            "type": "password",
            "required": true,
            "description": "Your Notion Internal Integration Secret"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Notion OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Notion OAuth Client Secret"
          }
        ]
      }
    }
  },
  "npm": {
    "serviceName": "npm",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "Registry URL",
            "type": "string",
            "required": true,
            "default": "https://registry.npmjs.org",
            "description": "URL of your npm registry"
          },
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your npm Access Token"
          }
        ]
      }
    }
  },
  "odoo": {
    "serviceName": "Odoo",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Site URL",
            "type": "string",
            "required": true,
            "description": "URL of your Odoo instance"
          },
          {
            "name": "Database name",
            "type": "string",
            "required": true,
            "description": "Your Odoo Database name"
          },
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Your Odoo Username"
          },
          {
            "name": "Password or API key",
            "type": "password",
            "required": true,
            "description": "Your Odoo Password or API Key"
          }
        ]
      },
      "password": {
        "type": "Password",
        "parameters": [
          {
            "name": "Site URL",
            "type": "string",
            "required": true,
            "description": "URL of your Odoo instance"
          },
          {
            "name": "Database name",
            "type": "string",
            "required": true,
            "description": "Your Odoo Database name"
          },
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Your Odoo Username"
          },
          {
            "name": "Password or API key",
            "type": "password",
            "required": true,
            "description": "Your Odoo Password or API Key"
          }
        ]
      }
    }
  },
  "okta": {
    "serviceName": "Okta",
    "authenticationMethods": {
      "sswsApiAccessToken": {
        "type": "SSWS API Access token",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "Base URL of your Okta org"
          },
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Okta SSWS API Access Token"
          }
        ]
      }
    }
  },
  "ollama": {
    "serviceName": "Ollama",
    "authenticationMethods": {
      "instanceUrl": {
        "type": "Instance URL",
        "parameters": [
          {
            "name": "Base URL",
            "type": "string",
            "required": true,
            "default": "http://localhost:11434",
            "description": "Base URL of your Ollama instance"
          }
        ]
      }
    }
  },
  "onesimpleapi": {
    "serviceName": "One Simple API",
    "authenticationMethods": {
      "apiToken": {
        "type": "API token",
        "parameters": [
          {
            "name": "API Token",
            "type": "password",
            "required": true,
            "description": "Your One Simple API API Token"
          }
        ]
      }
    }
  },
  "onfleet": {
    "serviceName": "Onfleet",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Onfleet API Key"
          }
        ]
      }
    }
  },
  "openai": {
    "serviceName": "OpenAI",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your OpenAI API Key"
          },
          {
            "name": "Organization ID",
            "type": "string",
            "required": false,
            "description": "Your OpenAI Organization ID (Optional)"
          }
        ]
      }
    }
  },
  "opencti": {
    "serviceName": "OpenCTI",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your OpenCTI API Key"
          }
        ]
      }
    }
  },
  "openrouter": {
    "serviceName": "OpenRouter",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your OpenRouter API Key"
          }
        ]
      }
    }
  },
  "openweathermap": {
    "serviceName": "OpenWeatherMap",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your OpenWeatherMap API Access Token"
          }
        ]
      }
    }
  },
  "oura": {
    "serviceName": "Oura",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "Personal Access Token",
            "type": "password",
            "required": true,
            "description": "Your Oura Personal Access Token"
          }
        ]
      }
    }
  },
  "paddle": {
    "serviceName": "Paddle",
    "authenticationMethods": {
      "apiAccessTokenClassic": {
        "type": "API access token (Classic)",
        "parameters": [
          {
            "name": "Vendor ID",
            "type": "number",
            "required": true,
            "description": "Your Paddle Vendor ID"
          },
          {
            "name": "Vendor Auth Code",
            "type": "password",
            "required": true,
            "description": "Your Paddle Vendor Auth Code"
          },
          {
            "name": "Use Sandbox Environment API",
            "type": "boolean",
            "required": false,
            "description": "Whether to use Paddle Sandbox Environment API"
          }
        ]
      }
    }
  },
  "pagerduty": {
    "serviceName": "PagerDuty",
    "authenticationMethods": {
      "apiKey": {
        "type": "API token",
        "parameters": [
          {
            "name": "API Token",
            "type": "password",
            "required": true,
            "description": "Your PagerDuty API Token"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your PagerDuty OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your PagerDuty OAuth Client Secret"
          }
        ]
      }
    }
  },
  "paypal": {
    "serviceName": "PayPal",
    "authenticationMethods": {
      "apiClientSecret": {
        "type": "API client and secret",
        "parameters": [
          {
            "name": "Environment",
            "type": "options",
            "options": ["Live", "Sandbox"],
            "required": true,
            "description": "Environment type for PayPal connection"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your PayPal API Client ID"
          },
          {
            "name": "Secret",
            "type": "password",
            "required": true,
            "description": "Your PayPal API Secret"
          }
        ]
      }
    }
  },
  "peekalink": {
    "serviceName": "Peekalink",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Peekalink API Key"
          }
        ]
      }
    }
  },
  "phantombuster": {
    "serviceName": "PhantomBuster",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your PhantomBuster API Key"
          }
        ]
      }
    }
  },
  "philipshue": {
    "serviceName": "Philips Hue",
    "authenticationMethods": {
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "App ID",
            "type": "string",
            "required": false,
            "description": "Your Philips Hue App ID (Optional for built-in OAuth)"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Philips Hue OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Philips Hue OAuth Client Secret"
          }
        ]
      }
    }
  },
  "pinecone": {
    "serviceName": "Pinecone",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Pinecone API Key"
          }
        ]
      }
    }
  },
  "pipedrive": {
    "serviceName": "Pipedrive",
    "authenticationMethods": {
      "apiToken": {
        "type": "API token",
        "parameters": [
          {
            "name": "API Token",
            "type": "password",
            "required": true,
            "description": "Your Pipedrive Personal API Token"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Pipedrive OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Pipedrive OAuth Client Secret"
          }
        ]
      }
    }
  },
  "plivo": {
    "serviceName": "Plivo",
    "authenticationMethods": {
      "basicAuth": {
        "type": "Basic auth",
        "parameters": [
          {
            "name": "Auth ID",
            "type": "string",
            "required": true,
            "description": "Your Plivo Auth ID"
          },
          {
            "name": "Auth Token",
            "type": "password",
            "required": true,
            "description": "Your Plivo Auth Token"
          }
        ]
      }
    }
  },
  "postgres": {
    "serviceName": "Postgres",
    "authenticationMethods": {
      "databaseConnection": {
        "type": "Database connection",
        "parameters": [
          {
            "name": "Host",
            "type": "string",
            "required": true,
            "description": "Your Postgres Hostname or IP address"
          },
          {
            "name": "Port",
            "type": "number",
            "required": true,
            "default": 5432,
            "description": "Port number for Postgres connection"
          },
          {
            "name": "Database",
            "type": "string",
            "required": true,
            "description": "Your Postgres Database name"
          },
          {
            "name": "User",
            "type": "string",
            "required": true,
            "description": "Your Postgres Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your Postgres Password"
          },
          {
            "name": "Ignore SSL Issues",
            "type": "boolean",
            "required": false,
            "description": "Whether to ignore SSL certificate validation issues"
          },
          {
            "name": "SSL",
            "type": "options",
            "options": ["Allow", "Disable", "Require"],
            "required": false,
            "description": "SSL setting for Postgres connection"
          },
          {
            "name": "SSH Tunnel",
            "type": "boolean",
            "required": false,
            "description": "Whether to use SSH tunnel for Postgres connection"
          },
          {
            "name": "SSH Authenticate with",
            "type": "options",
            "options": ["Password", "Private Key"],
            "required": false,
            "description": "Authentication method for SSH tunnel",
            "displayOptions": {
              "show": {
                "sshTunnel": [
                  true
                ]
              }
            }
          },
          {
            "name": "SSH Host",
            "type": "string",
            "required": false,
            "description": "Hostname or IP address of your SSH server",
            "displayOptions": {
              "show": {
                "sshTunnel": [
                  true
                ]
              }
            }
          },
          {
            "name": "SSH Port",
            "type": "number",
            "required": false,
            "default": 22,
            "description": "Port number for SSH connection",
            "displayOptions": {
              "show": {
                "sshTunnel": [
                  true
                ]
              }
            }
          },
          {
            "name": "SSH Postgres Port",
            "type": "number",
            "required": false,
            "description": "Port number for Postgres server behind SSH tunnel",
            "displayOptions": {
              "show": {
                "sshTunnel": [
                  true
                ]
              }
            }
          },
          {
            "name": "SSH User",
            "type": "string",
            "required": false,
            "description": "Username for SSH connection",
            "displayOptions": {
              "show": {
                "sshTunnel": [
                  true
                ]
              }
            }
          },
          {
            "name": "SSH Password",
            "type": "password",
            "required": false,
            "description": "Password for SSH connection",
            "displayOptions": {
              "show": {
                "sshTunnel": [
                  true
                ],
                "sshAuthenticateWith": [
                  "Password"
                ]
              }
            }
          },
          {
            "name": "Private Key",
            "type": "string",
            "required": false,
            "description": "Private key for SSH connection",
            "displayOptions": {
              "show": {
                "sshTunnel": [
                  true
                ],
                "sshAuthenticateWith": [
                  "Private Key"
                ]
              }
            }
          },
          {
            "name": "Passphrase",
            "type": "password",
            "required": false,
            "description": "Passphrase for encrypted Private Key",
            "displayOptions": {
              "show": {
                "sshTunnel": [
                  true
                ],
                "sshAuthenticateWith": [
                  "Private Key"
                ]
              }
            }
          }
        ]
      }
    }
  },
  "posthog": {
    "serviceName": "PostHog",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API URL",
            "type": "options",
            "options": ["https://us.i.posthog.com", "https://us.posthog.com", "https://eu.i.posthog.com", "https://eu.posthog.com", "Self-Hosted"],
            "required": true,
            "description": "URL of your PostHog API"
          },
          {
            "name": "Self-Hosted Domain",
            "type": "string",
            "required": false,
            "description": "Your self-hosted PostHog Domain",
            "displayOptions": {
              "show": {
                "apiUrl": [
                  "Self-Hosted"
                ]
              }
            }
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your PostHog API Key"
          }
        ]
      }
    }
  },
  "postmark": {
    "serviceName": "Postmark",
    "authenticationMethods": {
      "apiToken": {
        "type": "API token",
        "parameters": [
          {
            "name": "Server API Token",
            "type": "password",
            "required": true,
            "description": "Your Postmark Server API Token"
          }
        ]
      }
    }
  },
  "profitwell": {
    "serviceName": "ProfitWell",
    "authenticationMethods": {
      "apiToken": {
        "type": "API token",
        "parameters": [
          {
            "name": "API Token",
            "type": "password",
            "required": true,
            "description": "Your ProfitWell API Token"
          }
        ]
      }
    }
  },
  "pushbullet": {
    "serviceName": "Pushbullet",
    "authenticationMethods": {
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Pushbullet OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Pushbullet OAuth Client Secret"
          }
        ]
      }
    }
  },
  "pushcut": {
    "serviceName": "Pushcut",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Pushcut API Key"
          }
        ]
      }
    }
  },
  "pushover": {
    "serviceName": "Pushover",
    "authenticationMethods": {
      "apiKey": {
        "type": "API Key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Pushover API Key"
          }
        ]
      }
    }
  },
  "qdrant": {
    "serviceName": "Qdrant",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Qdrant URL",
            "type": "string",
            "required": true,
            "description": "URL of your Qdrant cluster"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Qdrant API Key"
          }
        ]
      }
    }
  },
  "qradar": {
    "serviceName": "QRadar",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your QRadar API Key (Authorized service token)"
          }
        ]
      }
    }
  },
  "qualys": {
    "serviceName": "Qualys",
    "authenticationMethods": {
      "basicAuth": {
        "type": "Basic auth",
        "parameters": [
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Your Qualys Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your Qualys Password"
          },
          {
            "name": "Requested With",
            "type": "string",
            "required": false,
            "default": "n8n application",
            "description": "Value for X-Requested-With header"
          }
        ]
      }
    }
  },
  "questdb": {
    "serviceName": "QuestDB",
    "authenticationMethods": {
      "databaseConnection": {
        "type": "Database connection",
        "parameters": [
          {
            "name": "Host",
            "type": "string",
            "required": true,
            "description": "Your QuestDB Hostname or IP address"
          },
          {
            "name": "Port",
            "type": "number",
            "required": true,
            "default": 8812,
            "description": "Port number for QuestDB connection"
          },
          {
            "name": "Database",
            "type": "string",
            "required": true,
            "default": "qdb",
            "description": "Your QuestDB Database name"
          },
          {
            "name": "User",
            "type": "string",
            "required": true,
            "default": "admin",
            "description": "Your QuestDB Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "default": "quest",
            "description": "Your QuestDB Password"
          },
          {
            "name": "SSL",
            "type": "options",
            "options": ["Allow", "Disable", "Require"],
            "required": false,
            "description": "SSL setting for QuestDB connection"
          }
        ]
      }
    }
  },
  "quickbase": {
    "serviceName": "Quick Base",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Hostname",
            "type": "string",
            "required": true,
            "description": "Your Quick Base Hostname"
          },
          {
            "name": "User Token",
            "type": "password",
            "required": true,
            "description": "Your Quick Base User Token"
          }
        ]
      }
    }
  },
  "quickbooks": {
    "serviceName": "QuickBooks",
    "authenticationMethods": {
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Environment",
            "type": "options",
            "options": ["Production", "Sandbox"],
            "required": true,
            "description": "Environment type for QuickBooks connection"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your QuickBooks OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your QuickBooks OAuth Client Secret"
          }
        ]
      }
    }
  },
  "rabbitmq": {
    "serviceName": "RabbitMQ",
    "authenticationMethods": {
      "userConnection": {
        "type": "User connection",
        "parameters": [
          {
            "name": "Hostname",
            "type": "string",
            "required": true,
            "description": "Hostname of your RabbitMQ broker"
          },
          {
            "name": "Port",
            "type": "number",
            "required": true,
            "description": "Port number for RabbitMQ connection"
          },
          {
            "name": "User",
            "type": "string",
            "required": true,
            "default": "guest",
            "description": "Username for RabbitMQ authentication"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "default": "guest",
            "description": "Password for RabbitMQ authentication"
          },
          {
            "name": "Vhost",
            "type": "string",
            "required": true,
            "default": "/",
            "description": "Virtual host for RabbitMQ connection"
          },
          {
            "name": "SSL",
            "type": "boolean",
            "required": false,
            "description": "Whether to use SSL for RabbitMQ connection"
          },
          {
            "name": "Passwordless",
            "type": "boolean",
            "required": false,
            "description": "Whether to use passwordless connection with certificates",
            "displayOptions": {
              "show": {
                "ssl": [
                  true
                ]
              }
            }
          },
          {
            "name": "Client Certificate",
            "type": "string",
            "required": false,
            "description": "Client certificate for passwordless SSL connection",
            "displayOptions": {
              "show": {
                "ssl": [
                  true
                ],
                "passwordless": [
                  true
                ]
              }
            }
          },
          {
            "name": "Client Key",
            "type": "string",
            "required": false,
            "description": "Client key for passwordless SSL connection",
            "displayOptions": {
              "show": {
                "ssl": [
                  true
                ],
                "passwordless": [
                  true
                ]
              }
            }
          },
          {
            "name": "Passphrase",
            "type": "password",
            "required": false,
            "description": "Passphrase for encrypted Client Key",
            "displayOptions": {
              "show": {
                "ssl": [
                  true
                ],
                "passwordless": [
                  true
                ]
              }
            }
          },
          {
            "name": "CA Certificates",
            "type": "string",
            "required": false,
            "description": "CA certificates for SSL connection",
            "displayOptions": {
              "show": {
                "ssl": [
                  true
                ],
                "passwordless": [
                  false
                ]
              }
            }
          }
        ]
      }
    }
  },
  "raindrop": {
    "serviceName": "Raindrop",
    "authenticationMethods": {
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Raindrop OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Raindrop OAuth Client Secret"
          }
        ]
      }
    }
  },
  "rapid7insightvm": {
    "serviceName": "Rapid7 InsightVM",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "Your Rapid7 InsightVM API Endpoint URL"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Rapid7 InsightVM API Key"
          }
        ]
      }
    }
  },
  "recordedfuture": {
    "serviceName": "Recorded Future",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Recorded Future API Access Token"
          }
        ]
      }
    }
  },
  "reddit": {
    "serviceName": "Reddit",
    "authenticationMethods": {
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Reddit OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Reddit OAuth Client Secret"
          }
        ]
      }
    }
  },
  "redis": {
    "serviceName": "Redis",
    "authenticationMethods": {
      "databaseConnection": {
        "type": "Database connection",
        "parameters": [
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your Redis Password"
          },
          {
            "name": "Host",
            "type": "string",
            "required": true,
            "default": "localhost",
            "description": "Your Redis Hostname or IP address"
          },
          {
            "name": "Port",
            "type": "number",
            "required": true,
            "default": 6379,
            "description": "Port number for Redis connection"
          },
          {
            "name": "Database Number",
            "type": "number",
            "required": true,
            "default": 0,
            "description": "Your Redis Database Number"
          },
          {
            "name": "SSL",
            "type": "boolean",
            "required": false,
            "description": "Whether to use SSL for Redis connection"
          }
        ]
      }
    }
  },
  "rocketchat": {
    "serviceName": "Rocket.Chat",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "Domain",
            "type": "string",
            "required": true,
            "description": "Your Rocket.Chat Domain"
          },
          {
            "name": "User ID",
            "type": "string",
            "required": true,
            "description": "Your Rocket.Chat User ID"
          },
          {
            "name": "Auth Key",
            "type": "password",
            "required": true,
            "description": "Your Rocket.Chat Personal Access Token"
          }
        ]
      }
    }
  },
  "rundeck": {
    "serviceName": "Rundeck",
    "authenticationMethods": {
      "apiToken": {
        "type": "API token",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "Base URL of your Rundeck server"
          },
          {
            "name": "API Token",
            "type": "password",
            "required": true,
            "description": "Your Rundeck User API Token"
          }
        ]
      }
    }
  },
  "s3": {
    "serviceName": "S3",
    "authenticationMethods": {
      "s3Endpoint": {
        "type": "S3 endpoint",
        "parameters": [
          {
            "name": "S3 Endpoint",
            "type": "string",
            "required": true,
            "description": "URL endpoint for S3 storage backend"
          },
          {
            "name": "Region",
            "type": "string",
            "required": true,
            "description": "Region for your S3 storage"
          },
          {
            "name": "Access Key ID",
            "type": "string",
            "required": true,
            "description": "Your S3 Access Key ID"
          },
          {
            "name": "Secret Access Key",
            "type": "password",
            "required": true,
            "description": "Your S3 Secret Access Key"
          },
          {
            "name": "Force Path Style",
            "type": "boolean",
            "required": false,
            "description": "Whether to use path-style addressing for buckets"
          },
          {
            "name": "Ignore SSL Issues",
            "type": "boolean",
            "required": false,
            "description": "Whether to ignore SSL certificate validation issues"
          }
        ]
      }
    }
  },
  "salesforce": {
    "serviceName": "Salesforce",
    "authenticationMethods": {
      "jwt": {
        "type": "JWT",
        "parameters": [
          {
            "name": "Environment Type",
            "type": "options",
            "options": ["Production", "Sandbox"],
            "required": true,
            "description": "Environment type of your Salesforce instance"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Salesforce OAuth Client ID (Consumer Key)"
          },
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Your Salesforce Username"
          },
          {
            "name": "Private Key",
            "type": "string",
            "required": true,
            "description": "Your Salesforce Private Key (PEM format)"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Environment Type",
            "type": "options",
            "options": ["Production", "Sandbox"],
            "required": true,
            "description": "Environment type of your Salesforce instance"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Salesforce OAuth Client ID (Consumer Key)"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Salesforce OAuth Client Secret (Consumer Secret)"
          },
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Your Salesforce Username"
          }
        ]
      }
    }
  },
  "salesmate": {
    "serviceName": "Salesmate",
    "authenticationMethods": {
      "apiToken": {
        "type": "API token",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "Your Salesmate domain name/base URL"
          },
          {
            "name": "Access Key",
            "type": "password",
            "required": true,
            "description": "Your Salesmate Access Key (Session Token)"
          }
        ]
      }
    }
  },
  "seatable": {
    "serviceName": "SeaTable",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Environment",
            "type": "options",
            "options": ["Cloud-Hosted", "Self-Hosted"],
            "required": true,
            "description": "Environment type of your SeaTable instance"
          },
          {
            "name": "API Token (of a Base)",
            "type": "password",
            "required": true,
            "description": "Your SeaTable Base API Token"
          },
          {
            "name": "Timezone",
            "type": "string",
            "required": true,
            "description": "Timezone of your SeaTable server"
          }
        ]
      }
    }
  },
  "securityscorecard": {
    "serviceName": "SecurityScorecard",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your SecurityScorecard API Key"
          }
        ]
      }
    }
  },
  "segment": {
    "serviceName": "Segment",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Write Key",
            "type": "password",
            "required": true,
            "description": "Your Segment Write Key"
          }
        ]
      }
    }
  },
  "sekoia": {
    "serviceName": "Sekoia",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Sekoia API Key"
          }
        ]
      }
    }
  },
  "sendgrid": {
    "serviceName": "SendGrid",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your SendGrid API Key"
          }
        ]
      }
    }
  },
  "sendy": {
    "serviceName": "Sendy",
    "authenticationMethods": {
      "apiKey": {
        "type": "API Key",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "URL of your Sendy application"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Sendy API Key"
          }
        ]
      }
    }
  },
  "sentryio": {
    "serviceName": "Sentry.io",
    "authenticationMethods": {
      "apiToken": {
        "type": "API token",
        "parameters": [
          {
            "name": "API Token",
            "type": "password",
            "required": true,
            "description": "Your Sentry.io User Auth Token"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Sentry.io OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Sentry.io OAuth Client Secret"
          }
        ]
      },
      "serverApiToken": {
        "type": "Server API token",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "URL of your self-hosted Sentry instance"
          },
          {
            "name": "API Token",
            "type": "password",
            "required": true,
            "description": "Your Sentry.io User Auth Token"
          }
        ]
      }
    }
  },
  "serp": {
    "serviceName": "Serp",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your SerpApi API Key"
          }
        ]
      }
    }
  },
  "servicenow": {
    "serviceName": "ServiceNow",
    "authenticationMethods": {
      "basicAuth": {
        "type": "Basic auth",
        "parameters": [
          {
            "name": "Subdomain",
            "type": "string",
            "required": true,
            "description": "Your ServiceNow Subdomain"
          },
          {
            "name": "User",
            "type": "string",
            "required": true,
            "description": "Your ServiceNow Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your ServiceNow Password"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Subdomain",
            "type": "string",
            "required": true,
            "description": "Your ServiceNow Subdomain"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your ServiceNow OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your ServiceNow OAuth Client Secret"
          }
        ]
      }
    }
  },
  "shopify": {
    "serviceName": "Shopify",
    "authenticationMethods": {
      "accessToken": {
        "type": "Access token",
        "parameters": [
          {
            "name": "Shop Subdomain",
            "type": "string",
            "required": true,
            "description": "Your Shopify Shop Subdomain"
          },
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Shopify Admin API Access Token"
          },
          {
            "name": "APP Secret Key",
            "type": "password",
            "required": true,
            "description": "Your Shopify App Secret Key"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Shop Subdomain",
            "type": "string",
            "required": true,
            "description": "Your Shopify Shop Subdomain"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Shopify OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Shopify OAuth Client Secret"
          }
        ]
      },
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Shop Subdomain",
            "type": "string",
            "required": true,
            "description": "Your Shopify Shop Subdomain"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Shopify API Key"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your Shopify Password"
          },
          {
            "name": "Shared Secret",
            "type": "password",
            "required": false,
            "description": "Your Shopify Shared Secret (Optional)"
          }
        ]
      }
    }
  },
  "shuffler": {
    "serviceName": "Shuffler",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Shuffler API Key"
          }
        ]
      }
    }
  },
  "signl4": {
    "serviceName": "SIGNL4",
    "authenticationMethods": {
      "webhookSecret": {
        "type": "Webhook secret",
        "parameters": [
          {
            "name": "Team Secret",
            "type": "string",
            "required": true,
            "description": "Your SIGNL4 Team Secret (part of webhook URL)"
          }
        ]
      }
    }
  },
  "slack": {
    "serviceName": "Slack",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Slack Bot User OAuth Token"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Slack OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Slack OAuth Client Secret"
          }
        ]
      }
    }
  },
  "sms77": {
    "serviceName": "seven",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your seven API Key"
          }
        ]
      }
    }
  },
  "snowflake": {
    "serviceName": "Snowflake",
    "authenticationMethods": {
      "databaseConnection": {
        "type": "Database connection",
        "parameters": [
          {
            "name": "Account",
            "type": "string",
            "required": true,
            "description": "Your Snowflake Account Name"
          },
          {
            "name": "Warehouse",
            "type": "string",
            "required": true,
            "description": "Your Snowflake Warehouse Name"
          },
          {
            "name": "Database",
            "type": "string",
            "required": true,
            "description": "Your Snowflake Database Name"
          },
          {
            "name": "Schema",
            "type": "string",
            "required": true,
            "description": "Your Snowflake Schema Name"
          },
          {
            "name": "Role",
            "type": "string",
            "required": true,
            "description": "Your Snowflake Role Name"
          },
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Your Snowflake Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your Snowflake Password"
          },
          {
            "name": "Client Session Keep Alive",
            "type": "boolean",
            "required": false,
            "description": "Whether to keep client session alive indefinitely"
          }
        ]
      }
    }
  },
  "solarwindsipam": {
    "serviceName": "SolarWinds IPAM",
    "authenticationMethods": {
      "usernamePassword": {
        "type": "Username & Password",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "Base URL of your SolarWinds IPAM server"
          },
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Your SolarWinds IPAM Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your SolarWinds IPAM Password"
          }
        ]
      }
    }
  },
  "solarwindsobservability": {
    "serviceName": "SolarWinds Observability SaaS",
    "authenticationMethods": {
      "apiToken": {
        "type": "API Token",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "URL of your SolarWinds Observability SaaS platform"
          },
          {
            "name": "API Token",
            "type": "password",
            "required": true,
            "description": "Your SolarWinds Observability SaaS API Token"
          }
        ]
      }
    }
  },
  "splunk": {
    "serviceName": "Splunk",
    "authenticationMethods": {
      "apiAuthToken": {
        "type": "API auth token",
        "parameters": [
          {
            "name": "Base URL",
            "type": "string",
            "required": true,
            "description": "Base URL of your Splunk instance"
          },
          {
            "name": "Auth Token",
            "type": "password",
            "required": true,
            "description": "Your Splunk API Auth Token"
          },
          {
            "name": "Allow Self-Signed Certificates",
            "type": "boolean",
            "required": false,
            "description": "Whether to allow self-signed SSL certificates"
          }
        ]
      }
    }
  },
  "spontit": {
    "serviceName": "Spontit",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Your Spontit Username"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Spontit API Key"
          }
        ]
      }
    }
  },
  "spotify": {
    "serviceName": "Spotify",
    "authenticationMethods": {
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Spotify OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Spotify OAuth Client Secret"
          }
        ]
      }
    }
  },
  "ssh": {
    "serviceName": "SSH",
    "authenticationMethods": {
      "password": {
        "type": "Password",
        "parameters": [
          {
            "name": "Host",
            "type": "string",
            "required": true,
            "description": "Hostname or IP address of your SSH server"
          },
          {
            "name": "Port",
            "type": "number",
            "required": true,
            "default": 22,
            "description": "Port number for SSH connection"
          },
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Username for SSH connection"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Password for SSH connection"
          }
        ]
      },
      "privateKey": {
        "type": "Private key",
        "parameters": [
          {
            "name": "Host",
            "type": "string",
            "required": true,
            "description": "Hostname or IP address of your SSH server"
          },
          {
            "name": "Port",
            "type": "number",
            "required": true,
            "default": 22,
            "description": "Port number for SSH connection"
          },
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Username for SSH connection"
          },
          {
            "name": "Private Key",
            "type": "string",
            "required": true,
            "description": "Private key for SSH connection"
          },
          {
            "name": "Passphrase",
            "type": "password",
            "required": false,
            "description": "Passphrase for encrypted Private Key"
          }
        ]
      }
    }
  },
  "stackby": {
    "serviceName": "Stackby",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Stackby API Key"
          }
        ]
      }
    }
  },
  "storyblok": {
    "serviceName": "Storyblok",
    "authenticationMethods": {
      "contentApiKey": {
        "type": "Content API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Storyblok Content API Key"
          }
        ]
      },
      "managementApiKey": {
        "type": "Management API key",
        "parameters": [
          {
            "name": "Personal Access Token",
            "type": "password",
            "required": true,
            "description": "Your Storyblok Personal Access Token"
          }
        ]
      }
    }
  },
  "strapi": {
    "serviceName": "Strapi",
    "authenticationMethods": {
      "apiUserAccount": {
        "type": "API user account",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "URL of your Strapi server"
          },
          {
            "name": "API Version",
            "type": "options",
            "options": ["Version 3", "Version 4"],
            "required": true,
            "description": "Version of Strapi API"
          },
          {
            "name": "Email",
            "type": "email",
            "required": true,
            "description": "Your Strapi user account Email"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your Strapi user account Password"
          }
        ]
      },
      "apiToken": {
        "type": "API token",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "URL of your Strapi server"
          },
          {
            "name": "API Version",
            "type": "options",
            "options": ["Version 3", "Version 4"],
            "required": true,
            "description": "Version of Strapi API"
          },
          {
            "name": "API Token",
            "type": "password",
            "required": true,
            "description": "Your Strapi API Token"
          }
        ]
      }
    }
  },
  "strava": {
    "serviceName": "Strava",
    "authenticationMethods": {
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Strava OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Strava OAuth Client Secret"
          }
        ]
      }
    }
  },
  "stripe": {
    "serviceName": "Stripe",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Secret Key",
            "type": "password",
            "required": true,
            "description": "Your Stripe API Secret Key"
          }
        ]
      }
    }
  },
  "supabase": {
    "serviceName": "Supabase",
    "authenticationMethods": {
      "accessToken": {
        "type": "Access token",
        "parameters": [
          {
            "name": "Host",
            "type": "string",
            "required": true,
            "description": "Your Supabase Project URL"
          },
          {
            "name": "Service Role Secret",
            "type": "password",
            "required": true,
            "description": "Your Supabase Service Role Secret"
          }
        ]
      }
    }
  },
  "surveymonkey": {
    "serviceName": "SurveyMonkey",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your SurveyMonkey API Access Token"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your SurveyMonkey OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your SurveyMonkey OAuth Client Secret"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your SurveyMonkey OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your SurveyMonkey OAuth Client Secret"
          }
        ]
      }
    }
  },
  "syncromsp": {
    "serviceName": "SyncroMSP",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Subdomain",
            "type": "string",
            "required": true,
            "description": "Your SyncroMSP Subdomain"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your SyncroMSP API Key (API token)"
          }
        ]
      }
    }
  },
  "sysdig": {
    "serviceName": "Sysdig",
    "authenticationMethods": {
      "accessKey": {
        "type": "Access Key",
        "parameters": [
          {
            "name": "Access Key",
            "type": "password",
            "required": true,
            "description": "Your Sysdig Access Key"
          }
        ]
      }
    }
  },
  "taiga": {
    "serviceName": "Taiga",
    "authenticationMethods": {
      "basicAuth": {
        "type": "Basic auth",
        "parameters": [
          {
            "name": "Environment",
            "type": "options",
            "options": ["Cloud", "Self-Hosted"],
            "required": true,
            "description": "Environment type of your Taiga instance"
          },
          {
            "name": "URL",
            "type": "string",
            "required": false,
            "description": "URL of your Self-Hosted Taiga instance",
            "displayOptions": {
              "show": {
                "environment": [
                  "Self-Hosted"
                ]
              }
            }
          },
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Your Taiga Username or Email"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your Taiga Password"
          }
        ]
      }
    }
  },
  "tapfiliate": {
    "serviceName": "Tapfiliate",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Tapfiliate API Key"
          }
        ]
      }
    }
  },
  "telegram": {
    "serviceName": "Telegram",
    "authenticationMethods": {
      "apiBotAccessToken": {
        "type": "API bot access token",
        "parameters": [
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Telegram Bot Access Token"
          }
        ]
      }
    }
  },
  "thehive": {
    "serviceName": "TheHive",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "URL of your TheHive server"
          },
          {
            "name": "API Version",
            "type": "options",
            "options": ["TheHive 3 (api v0)", "TheHive 4 (api v1)"],
            "required": true,
            "description": "Version of TheHive API"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your TheHive API Key"
          },
          {
            "name": "Ignore SSL Issues",
            "type": "boolean",
            "required": false,
            "description": "Whether to ignore SSL certificate validation issues"
          }
        ]
      }
    }
  },
  "thehive5": {
    "serviceName": "TheHive 5",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "URL of your TheHive 5 server"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your TheHive 5 API Key"
          },
          {
            "name": "Ignore SSL Issues",
            "type": "boolean",
            "required": false,
            "description": "Whether to ignore SSL certificate validation issues"
          }
        ]
      }
    }
  },
  "timescaledb": {
    "serviceName": "TimescaleDB",
    "authenticationMethods": {
      "databaseConnection": {
        "type": "Database connection",
        "parameters": [
          {
            "name": "Host",
            "type": "string",
            "required": true,
            "description": "Your TimescaleDB Hostname or IP address"
          },
          {
            "name": "Port",
            "type": "number",
            "required": true,
            "default": 5432,
            "description": "Port number for TimescaleDB connection"
          },
          {
            "name": "Database",
            "type": "string",
            "required": true,
            "description": "Your TimescaleDB Database name"
          },
          {
            "name": "User",
            "type": "string",
            "required": true,
            "description": "Your TimescaleDB Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your TimescaleDB Password"
          },
          {
            "name": "Ignore SSL Issues",
            "type": "boolean",
            "required": false,
            "description": "Whether to ignore SSL certificate validation issues"
          },
          {
            "name": "SSL",
            "type": "options",
            "options": ["Allow", "Disable", "Require"],
            "required": false,
            "description": "SSL setting for TimescaleDB connection"
          }
        ]
      }
    }
  },
  "todoist": {
    "serviceName": "Todoist",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Todoist API Key"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Todoist OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Todoist OAuth Client Secret"
          }
        ]
      }
    }
  },
  "toggl": {
    "serviceName": "Toggl",
    "authenticationMethods": {
      "basicAuth": {
        "type": "Basic auth",
        "parameters": [
          {
            "name": "Username",
            "type": "email",
            "required": true,
            "description": "Your Toggl Username (Email Address)"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your Toggl Password"
          }
        ]
      }
    }
  },
  "totp": {
    "serviceName": "TOTP",
    "authenticationMethods": {
      "secretAndLabel": {
        "type": "Secret and label",
        "parameters": [
          {
            "name": "Secret",
            "type": "string",
            "required": true,
            "description": "Your TOTP Secret Key (Base32 encoded)"
          },
          {
            "name": "Label",
            "type": "string",
            "required": true,
            "description": "Your TOTP Account Label"
          }
        ]
      }
    }
  },
  "travisci": {
    "serviceName": "Travis CI",
    "authenticationMethods": {
      "apiKey": {
        "type": "API token",
        "parameters": [
          {
            "name": "API Token",
            "type": "password",
            "required": true,
            "description": "Your Travis CI API Token"
          }
        ]
      }
    }
  },
  "trellixepo": {
    "serviceName": "Trellix ePO",
    "authenticationMethods": {
      "basicAuth": {
        "type": "Basic auth",
        "parameters": [
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Your Trellix ePO Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your Trellix ePO Password"
          }
        ]
      }
    }
  },
  "trello": {
    "serviceName": "Trello",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "string",
            "required": true,
            "description": "Your Trello API Key"
          },
          {
            "name": "API Token",
            "type": "password",
            "required": true,
            "description": "Your Trello API Token"
          }
        ]
      }
    }
  },
  "twake": {
    "serviceName": "Twake",
    "authenticationMethods": {
      "cloudApiKey": {
        "type": "Cloud API key",
        "parameters": [
          {
            "name": "Workspace Key",
            "type": "password",
            "required": true,
            "description": "Your Twake Cloud Workspace Key"
          }
        ]
      },
      "serverApiKey": {
        "type": "Server API key",
        "parameters": [
          {
            "name": "Host URL",
            "type": "string",
            "required": true,
            "description": "URL of your self-hosted Twake instance"
          },
          {
            "name": "Public ID",
            "type": "string",
            "required": true,
            "description": "Your Twake Application Public ID"
          },
          {
            "name": "Private API Key",
            "type": "password",
            "required": true,
            "description": "Your Twake Application Private API Key"
          }
        ]
      }
    }
  },
  "twilio": {
    "serviceName": "Twilio",
    "authenticationMethods": {
      "authToken": {
        "type": "Auth token",
        "parameters": [
          {
            "name": "Account SID",
            "type": "string",
            "required": true,
            "description": "Your Twilio Account SID"
          },
          {
            "name": "Auth Token",
            "type": "password",
            "required": true,
            "description": "Your Twilio Auth Token"
          }
        ]
      },
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Account SID",
            "type": "string",
            "required": true,
            "description": "Your Twilio Account SID"
          },
          {
            "name": "API Key SID",
            "type": "string",
            "required": true,
            "description": "Your Twilio API Key SID"
          },
          {
            "name": "API Key Secret",
            "type": "password",
            "required": true,
            "description": "Your Twilio API Key Secret"
          }
        ]
      }
    }
  },
  "twist": {
    "serviceName": "Twist",
    "authenticationMethods": {
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Twist OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Twist OAuth Client Secret"
          }
        ]
      }
    }
  },
  "twitter": {
    "serviceName": "X (formerly Twitter)",
    "authenticationMethods": {
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your X OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your X OAuth Client Secret"
          }
        ]
      }
    }
  },
  "typeform": {
    "serviceName": "Typeform",
    "authenticationMethods": {
      "apiToken": {
        "type": "API token",
        "parameters": [
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Typeform Personal Access Token"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Typeform OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Typeform OAuth Client Secret"
          }
        ]
      }
    }
  },
  "unleashedsoftware": {
    "serviceName": "Unleashed Software",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API ID",
            "type": "string",
            "required": true,
            "description": "Your Unleashed Software API ID"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Unleashed Software API Key"
          }
        ]
      }
    }
  },
  "uplead": {
    "serviceName": "UpLead",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your UpLead API Key"
          }
        ]
      }
    }
  },
  "uproc": {
    "serviceName": "uProc",
    "authenticationMethods": {
      "apiKey": {
        "type": "API Key",
        "parameters": [
          {
            "name": "Email",
            "type": "email",
            "required": true,
            "description": "Your uProc login email address"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your uProc API Key"
          }
        ]
      }
    }
  },
  "uptimerobot": {
    "serviceName": "UptimeRobot",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your UptimeRobot API Key (Main API Key)"
          }
        ]
      }
    }
  },
  "urlscanio": {
    "serviceName": "urlscan.io",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your urlscan.io API Key"
          }
        ]
      }
    }
  },
  "venafitlsprotectcloud": {
    "serviceName": "Venafi TLS Protect Cloud",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Region",
            "type": "options",
            "options": ["US", "EU"],
            "required": true,
            "description": "Your Venafi TLS Protect Cloud Region"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Venafi TLS Protect Cloud API Key"
          }
        ]
      }
    }
  },
  "venafitlsprotectdatacenter": {
    "serviceName": "Venafi TLS Protect Datacenter",
    "authenticationMethods": {
      "apiIntegration": {
        "type": "API integration",
        "parameters": [
          {
            "name": "Domain",
            "type": "string",
            "required": true,
            "description": "Your Venafi TLS Protect Datacenter Domain"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Venafi TLS Protect Datacenter Client ID"
          },
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Your Venafi TLS Protect Datacenter Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your Venafi TLS Protect Datacenter Password"
          },
          {
            "name": "Allow Self-Signed Certificates",
            "type": "boolean",
            "required": false,
            "description": "Whether to allow self-signed SSL certificates"
          }
        ]
      }
    }
  },
  "vero": {
    "serviceName": "Vero",
    "authenticationMethods": {
      "apiAuthToken": {
        "type": "API auth token",
        "parameters": [
          {
            "name": "Auth Token",
            "type": "password",
            "required": true,
            "description": "Your Vero Auth Token"
          }
        ]
      }
    }
  },
  "virustotal": {
    "serviceName": "VirusTotal",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Token",
            "type": "password",
            "required": true,
            "description": "Your VirusTotal API Token"
          }
        ]
      }
    }
  },
  "vonage": {
    "serviceName": "Vonage",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Vonage API Key"
          },
          {
            "name": "API Secret",
            "type": "password",
            "required": true,
            "description": "Your Vonage API Secret"
          }
        ]
      }
    }
  },
  "webflow": {
    "serviceName": "Webflow",
    "authenticationMethods": {
      "apiAccessToken": {
        "type": "API access token",
        "parameters": [
          {
            "name": "Site Access Token",
            "type": "password",
            "required": true,
            "description": "Your Webflow Site Access Token"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Legacy",
            "type": "boolean",
            "required": false,
            "description": "Whether to use Legacy API version"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Webflow OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Webflow OAuth Client Secret"
          }
        ]
      }
    }
  },
  "webhook": {
    "serviceName": "Webhook",
    "authenticationMethods": {
      "basicAuth": {
        "type": "Basic auth",
        "parameters": [
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Username for Webhook Basic Authentication"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Password for Webhook Basic Authentication"
          }
        ]
      },
      "headerAuth": {
        "type": "Header auth",
        "parameters": [
          {
            "name": "Name",
            "type": "string",
            "required": true,
            "description": "Header name for Webhook authentication"
          },
          {
            "name": "Value",
            "type": "string",
            "required": true,
            "description": "Header value for Webhook authentication"
          }
        ]
      },
      "jwtAuth": {
        "type": "JWT auth",
        "parameters": []
      },
      "none": {
        "type": "None",
        "parameters": []
      }
    }
  },
  "wekan": {
    "serviceName": "Wekan",
    "authenticationMethods": {
      "basicAuth": {
        "type": "Basic auth",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "URL of your Wekan instance"
          },
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Your Wekan Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your Wekan Password"
          }
        ]
      }
    }
  },
  "whatsapp": {
    "serviceName": "WhatsApp Business Cloud",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your WhatsApp Business Cloud API Access Token"
          },
          {
            "name": "Business Account ID",
            "type": "string",
            "required": true,
            "description": "Your WhatsApp Business Account ID"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your WhatsApp Business Cloud OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your WhatsApp Business Cloud OAuth Client Secret"
          }
        ]
      }
    }
  },
  "wise": {
    "serviceName": "Wise",
    "authenticationMethods": {
      "apiToken": {
        "type": "API token",
        "parameters": [
          {
            "name": "Environment",
            "type": "options",
            "options": ["Live", "Test"],
            "required": true,
            "description": "Environment type for Wise connection"
          },
          {
            "name": "API Token",
            "type": "password",
            "required": true,
            "description": "Your Wise API Token"
          },
          {
            "name": "Private Key (Optional)",
            "type": "string",
            "required": false,
            "description": "Private Key for SCA (Optional, for Live environment)"
          }
        ]
      }
    }
  },
  "wolframalpha": {
    "serviceName": "Wolfram|Alpha",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "App ID",
            "type": "string",
            "required": true,
            "description": "Your Wolfram|Alpha App ID"
          }
        ]
      }
    }
  },
  "woocommerce": {
    "serviceName": "WooCommerce",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "WooCommerce URL",
            "type": "string",
            "required": true,
            "description": "URL of your WordPress site with WooCommerce"
          },
          {
            "name": "Consumer Key",
            "type": "string",
            "required": true,
            "description": "Your WooCommerce API Consumer Key"
          },
          {
            "name": "Consumer Secret",
            "type": "password",
            "required": true,
            "description": "Your WooCommerce API Consumer Secret"
          },
          {
            "name": "Include Credentials in Query",
            "type": "boolean",
            "required": false,
            "description": "Whether to include credentials in query parameters"
          }
        ]
      }
    }
  },
  "wordpress": {
    "serviceName": "WordPress",
    "authenticationMethods": {
      "basicAuth": {
        "type": "Basic auth",
        "parameters": [
          {
            "name": "WordPress URL",
            "type": "string",
            "required": true,
            "description": "URL of your WordPress site"
          },
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Your WordPress Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your WordPress Application Password"
          },
          {
            "name": "Ignore SSL Issues",
            "type": "boolean",
            "required": false,
            "description": "Whether to ignore SSL certificate validation issues"
          }
        ]
      }
    }
  },
  "workable": {
    "serviceName": "Workable",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Subdomain",
            "type": "string",
            "required": true,
            "description": "Your Workable Subdomain"
          },
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Workable API Access Token"
          }
        ]
      }
    }
  },
  "wufoo": {
    "serviceName": "Wufoo",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Subdomain",
            "type": "string",
            "required": true,
            "description": "Your Wufoo Subdomain"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Wufoo API Key"
          }
        ]
      }
    }
  },
  "xata": {
    "serviceName": "Xata",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Database Endpoint",
            "type": "string",
            "required": true,
            "description": "Your Xata Database Endpoint"
          },
          {
            "name": "Branch",
            "type": "string",
            "required": true,
            "description": "Your Xata Database Branch"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Xata API Key"
          }
        ]
      }
    }
  },
  "xero": {
    "serviceName": "Xero",
    "authenticationMethods": {
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Access Token URL",
            "type": "options",
            "options": ["AU", "CN", "EU", "IN", "US"],
            "required": true,
            "description": "Your Xero data center region"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Xero OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Xero OAuth Client Secret"
          }
        ]
      }
    }
  },
  "yourls": {
    "serviceName": "Yourls",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "URL of your Yourls instance"
          },
          {
            "name": "Signature",
            "type": "password",
            "required": true,
            "description": "Your Yourls Signature Token"
          }
        ]
      }
    }
  },
  "zabbix": {
    "serviceName": "Zabbix",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "URL of your Zabbix server"
          },
          {
            "name": "API Token",
            "type": "password",
            "required": true,
            "description": "Your Zabbix API Token"
          }
        ]
      }
    }
  },
  "zammad": {
    "serviceName": "Zammad",
    "authenticationMethods": {
      "basicAuth": {
        "type": "Basic auth",
        "parameters": [
          {
            "name": "Base URL",
            "type": "string",
            "required": true,
            "description": "Base URL of your Zammad instance"
          },
          {
            "name": "Email",
            "type": "email",
            "required": true,
            "description": "Your Zammad login email address"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your Zammad login password"
          },
          {
            "name": "Ignore SSL Issues",
            "type": "boolean",
            "required": false,
            "description": "Whether to ignore SSL certificate validation issues"
          }
        ]
      },
      "tokenAuth": {
        "type": "Token auth",
        "parameters": [
          {
            "name": "Base URL",
            "type": "string",
            "required": true,
            "description": "Base URL of your Zammad instance"
          },
          {
            "name": "Access Token",
            "type": "password",
            "required": true,
            "description": "Your Zammad API Access Token"
          },
          {
            "name": "Ignore SSL Issues",
            "type": "boolean",
            "required": false,
            "description": "Whether to ignore SSL certificate validation issues"
          }
        ]
      }
    }
  },
  "zendesk": {
    "serviceName": "Zendesk",
    "authenticationMethods": {
      "apiToken": {
        "type": "API token",
        "parameters": [
          {
            "name": "Subdomain",
            "type": "string",
            "required": true,
            "description": "Your Zendesk Subdomain"
          },
          {
            "name": "Email",
            "type": "email",
            "required": true,
            "description": "Your Zendesk login email address"
          },
          {
            "name": "API Token",
            "type": "password",
            "required": true,
            "description": "Your Zendesk API Token"
          }
        ]
      },
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Subdomain",
            "type": "string",
            "required": true,
            "description": "Your Zendesk Subdomain"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Zendesk OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Zendesk OAuth Client Secret"
          }
        ]
      }
    }
  },
  "zep": {
    "serviceName": "Zep",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "Cloud",
            "type": "boolean",
            "required": false,
            "description": "Whether using Zep Cloud"
          },
          {
            "name": "API URL",
            "type": "string",
            "required": true,
            "description": "URL of your Zep instance"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Zep API Key"
          }
        ]
      }
    }
  },
  "zoho": {
    "serviceName": "Zoho",
    "authenticationMethods": {
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Access Token URL",
            "type": "options",
            "options": ["AU", "CN", "EU", "IN", "US"],
            "required": true,
            "description": "Your Zoho data center region"
          },
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Zoho OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Zoho OAuth Client Secret"
          }
        ]
      }
    }
  },
  "zoom": {
    "serviceName": "Zoom",
    "authenticationMethods": {
      "oauth2": {
        "type": "OAuth2",
        "parameters": [
          {
            "name": "Client ID",
            "type": "string",
            "required": true,
            "description": "Your Zoom OAuth Client ID"
          },
          {
            "name": "Client Secret",
            "type": "password",
            "required": true,
            "description": "Your Zoom OAuth Client Secret"
          }
        ]
      }
    }
  },
  "zscalerzia": {
    "serviceName": "Zscaler ZIA",
    "authenticationMethods": {
      "basicAuthAndApiKeyCombo": {
        "type": "Basic auth and API key combo",
        "parameters": [
          {
            "name": "Base URL",
            "type": "string",
            "required": true,
            "description": "Base URL of your Zscaler ZIA cloud name"
          },
          {
            "name": "Username",
            "type": "string",
            "required": true,
            "description": "Your Zscaler ZIA Admin Username"
          },
          {
            "name": "Password",
            "type": "password",
            "required": true,
            "description": "Your Zscaler ZIA Admin Password"
          },
          {
            "name": "Api Key",
            "type": "password",
            "required": true,
            "description": "Your Zscaler ZIA API Key"
          }
        ]
      }
    }
  },
  "zulip": {
    "serviceName": "Zulip",
    "authenticationMethods": {
      "apiKey": {
        "type": "API key",
        "parameters": [
          {
            "name": "URL",
            "type": "string",
            "required": true,
            "description": "URL of your Zulip domain"
          },
          {
            "name": "Email",
            "type": "email",
            "required": true,
            "description": "Your Zulip login email address"
          },
          {
            "name": "API Key",
            "type": "password",
            "required": true,
            "description": "Your Zulip API Key"
          }
        ]
      }
    }
  },
  "google": {
    "serviceName": "Google",
    "authenticationMethods": {}
  },
  "imap": {
    "serviceName": "IMAP",
    "authenticationMethods": {}
  },
  "sendemail": {
    "serviceName": "Send Email",
    "authenticationMethods": {}
  }
}
